{"version":3,"file":"ArchbaseAdvancedTabs-2e888216.js","sources":["../../node_modules/usehooks-ts/dist/esm/useCopyToClipboard/useCopyToClipboard.js","../../node_modules/usehooks-ts/dist/esm/useEventListener/useEventListener.js","../../node_modules/usehooks-ts/dist/esm/useFetch/useFetch.js","../../node_modules/usehooks-ts/dist/esm/useIsomorphicLayoutEffect/useIsomorphicLayoutEffect.js","../../node_modules/usehooks-ts/dist/esm/useWindowSize/useWindowSize.js","../../src/components/containers/advancedtabs/ArchbaseAdvancedTabs.tsx"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useState } from 'react';\nfunction useCopyToClipboard() {\n    const [copiedText, setCopiedText] = useState(null);\n    const copy = (text) => __awaiter(this, void 0, void 0, function* () {\n        if (!(navigator === null || navigator === void 0 ? void 0 : navigator.clipboard)) {\n            console.warn('Clipboard not supported');\n            return false;\n        }\n        try {\n            yield navigator.clipboard.writeText(text);\n            setCopiedText(text);\n            return true;\n        }\n        catch (error) {\n            console.warn('Copy failed', error);\n            setCopiedText(null);\n            return false;\n        }\n    });\n    return [copiedText, copy];\n}\nexport default useCopyToClipboard;\n","import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '..';\nfunction useEventListener(eventName, handler, element, options) {\n    const savedHandler = useRef(handler);\n    useIsomorphicLayoutEffect(() => {\n        savedHandler.current = handler;\n    }, [handler]);\n    useEffect(() => {\n        var _a;\n        const targetElement = (_a = element === null || element === void 0 ? void 0 : element.current) !== null && _a !== void 0 ? _a : window;\n        if (!(targetElement && targetElement.addEventListener))\n            return;\n        const listener = event => savedHandler.current(event);\n        targetElement.addEventListener(eventName, listener, options);\n        return () => {\n            targetElement.removeEventListener(eventName, listener, options);\n        };\n    }, [eventName, element, options]);\n}\nexport default useEventListener;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useEffect, useReducer, useRef } from 'react';\nfunction useFetch(url, options) {\n    const cache = useRef({});\n    const cancelRequest = useRef(false);\n    const initialState = {\n        error: undefined,\n        data: undefined,\n    };\n    const fetchReducer = (state, action) => {\n        switch (action.type) {\n            case 'loading':\n                return Object.assign({}, initialState);\n            case 'fetched':\n                return Object.assign(Object.assign({}, initialState), { data: action.payload });\n            case 'error':\n                return Object.assign(Object.assign({}, initialState), { error: action.payload });\n            default:\n                return state;\n        }\n    };\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\n    useEffect(() => {\n        if (!url)\n            return;\n        cancelRequest.current = false;\n        const fetchData = () => __awaiter(this, void 0, void 0, function* () {\n            dispatch({ type: 'loading' });\n            if (cache.current[url]) {\n                dispatch({ type: 'fetched', payload: cache.current[url] });\n                return;\n            }\n            try {\n                const response = yield fetch(url, options);\n                if (!response.ok) {\n                    throw new Error(response.statusText);\n                }\n                const data = (yield response.json());\n                cache.current[url] = data;\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'fetched', payload: data });\n            }\n            catch (error) {\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'error', payload: error });\n            }\n        });\n        void fetchData();\n        return () => {\n            cancelRequest.current = true;\n        };\n    }, [url]);\n    return state;\n}\nexport default useFetch;\n","import { useEffect, useLayoutEffect } from 'react';\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n","import { useState } from 'react';\nimport { useEventListener, useIsomorphicLayoutEffect } from '..';\nfunction useWindowSize() {\n    const [windowSize, setWindowSize] = useState({\n        width: 0,\n        height: 0,\n    });\n    const handleSize = () => {\n        setWindowSize({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    };\n    useEventListener('resize', handleSize);\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n    }, []);\n    return windowSize;\n}\nexport default useWindowSize;\n","/* eslint-disable */\nimport React, { useState, useRef, useEffect, CSSProperties, ReactNode } from 'react';\nimport { useWindowSize } from 'usehooks-ts'\n\n\nexport interface ArchbaseAdvancedTabItem {\n  key: any;\n  favicon: ReactNode | string | undefined;\n  title: string;\n}\n\nexport interface ArchbaseAdvancedTabProps {\n  favicon : ReactNode | string | undefined;\n  title : string;\n  activeTab : boolean; \n  position : number;\n  contentWidth : number;\n  onClick : (event: React.MouseEvent<HTMLDivElement>) => void;\n  onClose : (event: React.MouseEvent<HTMLDivElement>) => void;\n  setDragging : Function;\n  tabsContentWidth : number;\n  animateTabMove : Function;\n\tisDragging : boolean;\n  id: any;\n  index : number;\n  sorting : boolean;\n  showButtonClose: boolean;\n}\n\nconst ArchbaseAdvancedTab : React.FC<ArchbaseAdvancedTabProps> = (props) => {\n\tconst { favicon, title, activeTab, position, contentWidth, onClick, onClose, setDragging, tabsContentWidth, animateTabMove,\n\t\tisDragging, index, sorting, showButtonClose } = props;\n\tconst [width, setWidth] = useState(0);\n\tconst [isAdded, setAdd] = useState(false);\n\tconst [movePosition, setMovePosition] = useState<Number|null>(null);\n\tconst [startX, setStartX] = useState(null);\n\tconst [_dragEnd, setDragEnd] = useState(false);\n\tconst [tmpPosition, setTmpPosition] = useState<number>(0);\n\tconst tabEl = useRef(null);\n\n\tconst TAB_CONTENT_MARGIN = 9\n\tconst TAB_SIZE_SMALL = 84\n\tconst TAB_SIZE_SMALLER = 60\n\tconst TAB_SIZE_MINI = 48\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('mousemove', onDragMove);\n\t\tdocument.addEventListener('mouseup', onDragEnd);\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('mousemove', onDragMove);\n\t\t\tdocument.addEventListener('mouseup', onDragEnd);\n\t\t}\n\t});\n\n\tuseEffect(() => { \n\t\tif (!isAdded) {\n\t\t\tsetTimeout(() => setAdd(true), 500)\n\t\t}\n\t}, [isAdded])\n\n\tuseEffect(() => {\n\t\tsetWidth(contentWidth + (2 * TAB_CONTENT_MARGIN))\n\t}, [contentWidth])\n\n\tconst onDragStart = (e:any) => {\n\t\tif (e.button === 0) {\n\t\t\tsetDragging(true)\n\t\t\tsetStartX(e.pageX)\n\t\t\tsetDragEnd(false)\n\t\t\tsetTmpPosition(position)\n\t\t}\n\t}\n\n\tconst onDragMove = (e:any) => {\n\t\tif (startX != null && isDragging) {\n\t\t\tlet newPosition = tmpPosition - TAB_CONTENT_MARGIN + (e.pageX - startX);\n\n\t\t\tnewPosition < 0 && (newPosition = 0)\n\t\t\tnewPosition > tabsContentWidth - width && (newPosition = tabsContentWidth - width)\n\t\t\tsetMovePosition(newPosition)\n\t\t\t!sorting && animateTabMove(newPosition,)\n\t\t}\n\t}\n\n\tconst onDragEnd = (_e:any) => {\n\t\tif (startX != null && isDragging) {\n\t\t\tsetStartX(null)\n\t\t\tsetMovePosition(null)\n\t\t\tsetDragging(false)\n\t\t\tsetDragEnd(true)\n\t\t}\n\t}\n\tconst [tmp, setTmp] = useState(position - TAB_CONTENT_MARGIN);\n\tuseEffect(() => { \n\t\tsetTmp(!!position ? position - TAB_CONTENT_MARGIN : 0)\n\t}, [index, position])\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`archbase_tab ${!isAdded ? \" archbase_tab-was-just-added\" : \"\"}${startX == null && !activeTab ? \" archbase_tab-was-just-dragged\" : \"\"}`}\n\t\t\tstyle={{\n\t\t\t\ttransform: `translate3d(${movePosition == null ? tmp : movePosition}px, 0, 0)`, width: `${width}px`\n\t\t\t}}\n\t\t\ttab-active={activeTab !== false ? \"\" : null} \n      \t\tis-small={contentWidth < TAB_SIZE_SMALL ? \"\" : null}\n\t\t\tis-smaller={contentWidth < TAB_SIZE_SMALLER ? \"\" : null} is-mini={contentWidth < TAB_SIZE_MINI ? \"\" : null}\n\t\t\tref={tabEl}\n\t\t>\n\t\t\t<div className=\"archbase_tab-dividers\"></div>\n\t\t\t<div className=\"archbase_tab-background\">\n\t\t\t\t<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<defs>\n\t\t\t\t\t\t<symbol id=\"archbase_tab-geometry-left\" viewBox=\"0 0 214 36\"><path d=\"M17 0h197v36H0v-2c4.5 0 9-3.5 9-8V8c0-4.5 3.5-8 8-8z\" /></symbol>\n\t\t\t\t\t\t<symbol id=\"archbase_tab-geometry-right\" viewBox=\"0 0 214 36\"><use xlinkHref=\"#archbase_tab-geometry-left\" /></symbol>\n\t\t\t\t\t\t<clipPath id=\"crop\"><rect className=\"mask\" width=\"100%\" height=\"100%\" x=\"0\" /></clipPath>\n\t\t\t\t\t</defs>\n\t\t\t\t\t<svg width=\"52%\" height=\"100%\"><use xlinkHref=\"#archbase_tab-geometry-left\" width=\"214\" height=\"36\" className=\"archbase_tab-geometry\" />\n\t\t\t\t\t</svg>\n\t\t\t\t\t<g transform=\"scale(-1, 1)\">\n\t\t\t\t\t\t<svg width=\"52%\" height=\"100%\" x=\"-100%\" y=\"0\"><use xlinkHref=\"#archbase_tab-geometry-right\" width=\"214\" height=\"36\" className=\"archbase_tab-geometry\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<div className=\"archbase_tab-content\">\n\t\t\t\t{!!favicon && <div className=\"archbase_tab-favicon\" style={{ \"backgroundImage\": `url(${favicon})` }}></div>}\n\t\t\t\t<div className=\"archbase_tab-title\">{title}</div>\n\t\t\t\t<div className=\"archbase_tab-drag-handle\" title={title} onClick={onClick} onPointerDown={e => (onClick(e))} onMouseUp={onDragEnd} onMouseMove={onDragMove} onMouseDown={onDragStart}></div>\n\t\t\t\t{showButtonClose?<div className=\"archbase_tab-close\" onClick={onClose}></div>:null}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport interface ArchbaseAdvancedTabsProps {\n  currentTabs: ArchbaseAdvancedTabItem[]\n  buttonCloseOnlyActiveTab: boolean\n  activeTab: any,\n  onTabChange: Function,\n  onTabClose: Function,\n  className?: string,\n  style?: CSSProperties,\n  dark: boolean,\n  onClick: Function,\n}\n\nexport const ArchbaseAdvancedTabs: React.FC<ArchbaseAdvancedTabsProps> = (props) => {\n\tconst { currentTabs, onTabChange: onChange, activeTab, onTabClose: onClose, className, style, dark, onClick, buttonCloseOnlyActiveTab = false } = props;\n\tconst [tabContentWidths, setTabContentWidths] = useState<number[]>([]);\n\tconst [positions, setPositions] = useState<number[]>([]);\n\tconst [tabs, setTabs] = useState(currentTabs || []);\n\tconst [sorting, setSorting] = useState(false);\n\tconst [isDragging, setDragging] = useState(false);\n\tconst tabContentEl = useRef<any>(null);\n\tconst { width, height } = useWindowSize()\n\n\tconst TAB_CONTENT_MARGIN = 9\n\tconst TAB_CONTENT_OVERLAP_DISTANCE = 1\n\n\tconst TAB_CONTENT_MIN_WIDTH = 24\n\tconst TAB_CONTENT_MAX_WIDTH = 240\n\n\tuseEffect(() => {\n\t\tsetTabContentWidths(getContentWidths());\n\t\tsetPositions(tabContentPositions(getContentWidths()));\n\t}, []);\n\n\tuseEffect(() => {\n\t\thandleResize();\n\t}, [JSON.stringify(tabs), width, height]);\n\n\tuseEffect(() => {\n\t\t!!currentTabs && setTabs(currentTabs);\n\t}, [JSON.stringify(currentTabs)]);\n\n\tconst handleResize = () => {\n\t\tconst widths = getContentWidths();\n\t\tif (widths) {\n\t\t\tsetTabContentWidths(widths);\n\t\t\tsetPositions(tabContentPositions(widths));\n\t\t}\n\t}\n\n\tconst getContentWidths = () : number[] => {\n    const widths : number[] = []\n\t\tif (tabContentEl.current) {\n\t\t\tconst numberOfTabs = tabs.length\n\t\t\tconst tabsContentWidth = tabContentEl.current.clientWidth\n\t\t\tconst tabsCumulativeOverlappedWidth = (numberOfTabs - 1) * TAB_CONTENT_OVERLAP_DISTANCE\n\t\t\tconst targetWidth = (tabsContentWidth - (2 * TAB_CONTENT_MARGIN) + tabsCumulativeOverlappedWidth) / numberOfTabs\n\t\t\tconst clampedTargetWidth = Math.max(TAB_CONTENT_MIN_WIDTH, Math.min(TAB_CONTENT_MAX_WIDTH, targetWidth))\n\t\t\tconst flooredClampedTargetWidth = Math.floor(clampedTargetWidth)\n\t\t\tconst totalTabsWidthUsingTarget = (flooredClampedTargetWidth * numberOfTabs) + (2 * TAB_CONTENT_MARGIN) - tabsCumulativeOverlappedWidth\n\t\t\tconst totalExtraWidthDueToFlooring = tabsContentWidth - totalTabsWidthUsingTarget\t\t\n\t\t\tlet extraWidthRemaining = totalExtraWidthDueToFlooring\n\t\t\tfor (let i = 0; i < numberOfTabs; i += 1) {\n\t\t\t\tconst extraWidth = flooredClampedTargetWidth < TAB_CONTENT_MAX_WIDTH && extraWidthRemaining > 0 ? 1 : 0\n\t\t\t\twidths.push(flooredClampedTargetWidth + extraWidth)\n\t\t\t\tif (extraWidthRemaining > 0) extraWidthRemaining -= 1\n\t\t\t}\t\t\t\n\t\t}\n    return widths\n\t}\n\n\tconst tabContentPositions = (contentWidths : number[]) : number[] => {\n\t\tconst positions : number[] = []\n\t\tconst widths = contentWidths || tabContentWidths;\n\n\t\tlet position = TAB_CONTENT_MARGIN\n\t\twidths.forEach((width, i) => {\n\t\t\tconst offset = i * TAB_CONTENT_OVERLAP_DISTANCE\n\t\t\tpositions.push(position - offset)\n\t\t\tposition += width\n\t\t})\n\n\t\treturn positions\n\t}\n\n\tconst animateTabMove = (position:any, index:any) => {\n\t\tsetSorting(true)\n\t\tlet closest = Infinity\n\t\tlet closestIndex = -1\n\t\tlet tabsDrag : ArchbaseAdvancedTabItem[] = []\n\t\tpositions.forEach((v, i) => {\n\t\t\tif (Math.abs(position - v) < closest) {\n\t\t\t\tclosest = Math.abs(position - v)\n\t\t\t\tclosestIndex = i\n\t\t\t}\n\t\t})\n\t\tclosestIndex = Math.max(0, Math.min(positions.length, closestIndex));\n\t\tif (index != closestIndex) {\n\t\t\tpositions.forEach((_v, i) => {\n\t\t\t\tif (i == index) {\n\t\t\t\t\ttabsDrag[i] = tabs[closestIndex > index ? i + 1 : i - 1]\n\t\t\t\t}\n\t\t\t\telse if (index > i && i >= closestIndex) { \n\t\t\t\t\ttabsDrag[i] = tabs[i + 1]\n\t\t\t\t}\n\t\t\t\telse if (index < i && i <= closestIndex) {\n\t\t\t\t\ttabsDrag[i] = tabs[i - 1]\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttabsDrag[i] = tabs[i]\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\tcheckIndex(tabsDrag) && onChange(tabsDrag)\n\t\t}\n\t\tsetSorting(false)\n\t}\n\n\tconst checkIndex = (newTabs:any) => {\n\t\treturn new Set(newTabs).size === newTabs.length;\n\t}\n\n\tconst closeTab = (idx:any) => {\n\t\t!!onClose ? onClose(idx) : onChange(tabs.filter((_m, index) => index != idx))\n\t}\n\treturn (\n\t\t<div className={className} style={style}>\n\t\t\t<div\n\t\t\t\tclassName={`archbase_tabs${!!dark ? \" archbase_tabs-dark-theme\" : \"\"}${!isDragging ? \" archbase_tabs-is-sorting\" : \"\"}`}\n\t\t\t>\n\t\t\t\t<div className={`archbase_tabs_content`} ref={tabContentEl} >\n\t\t\t\t\t{\n\t\t\t\t\t\t!!tabs && tabs.map((m : ArchbaseAdvancedTabItem, index) =>\n\t\t\t\t\t\t\t!!positions[index] &&\n\t\t\t\t\t\t\t<ArchbaseAdvancedTab\n\t\t\t\t\t\t\t\tkey={m.key}\n\t\t\t\t\t\t\t\tfavicon={m.favicon}\n\t\t\t\t\t\t\t\ttitle={m.title}\n\t\t\t\t\t\t\t\tactiveTab={activeTab === m.key}\n\t\t\t\t\t\t\t\tposition={positions[index]}\n\t\t\t\t\t\t\t\tcontentWidth={tabContentWidths[index]}\n\t\t\t\t\t\t\t\tonClick={_e => onClick(m.key)}\n\t\t\t\t\t\t\t\tonClose={_e => closeTab(m.key)}\n\t\t\t\t\t\t\t\tsetDragging={setDragging}\n\t\t\t\t\t\t\t\tshowButtonClose={buttonCloseOnlyActiveTab?activeTab === m.key:true}\n\t\t\t\t\t\t\t\ttabsContentWidth={tabContentEl.current && tabContentEl.current.clientWidth}\n\t\t\t\t\t\t\t\tanimateTabMove={(p: any) => animateTabMove(p, index)}\n\t\t\t\t\t\t\t\tisDragging={isDragging}\n\t\t\t\t\t\t\t\tid={m.key}\n\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\tsorting={sorting}\n\t\t\t\t\t\t\t/>)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"archbase_tabs-bottom-bar\"></div>\n\t\t\t</div>\n\t\t\t<div className=\"archbase_tabs-optional-shadow-below-bottom-bar\"></div>\n\t\t</div>\n\n\t);\n}\n\n\n\n\n"],"names":["this","useEventListener","eventName","handler","element","options","savedHandler","useRef","useIsomorphicLayoutEffect","useEffect","_a","targetElement","listener","event","useLayoutEffect","useWindowSize","windowSize","setWindowSize","useState","handleSize","ArchbaseAdvancedTab","props","favicon","title","activeTab","position","contentWidth","onClick","onClose","setDragging","tabsContentWidth","animateTabMove","isDragging","index","sorting","showButtonClose","width","setWidth","isAdded","setAdd","movePosition","setMovePosition","startX","setStartX","_dragEnd","setDragEnd","tmpPosition","setTmpPosition","tabEl","TAB_CONTENT_MARGIN","TAB_SIZE_SMALL","TAB_SIZE_SMALLER","TAB_SIZE_MINI","onDragMove","onDragEnd","onDragStart","e","newPosition","_e","tmp","setTmp","jsxs","jsx","ArchbaseAdvancedTabs","currentTabs","onChange","className","style","dark","buttonCloseOnlyActiveTab","tabContentWidths","setTabContentWidths","positions","setPositions","tabs","setTabs","setSorting","tabContentEl","height","TAB_CONTENT_OVERLAP_DISTANCE","TAB_CONTENT_MIN_WIDTH","TAB_CONTENT_MAX_WIDTH","getContentWidths","tabContentPositions","handleResize","widths","numberOfTabs","tabsCumulativeOverlappedWidth","targetWidth","clampedTargetWidth","flooredClampedTargetWidth","totalTabsWidthUsingTarget","extraWidthRemaining","i","extraWidth","contentWidths","positions2","width2","offset","closest","closestIndex","tabsDrag","v","_v","checkIndex","newTabs","closeTab","idx","_m","m","p"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}