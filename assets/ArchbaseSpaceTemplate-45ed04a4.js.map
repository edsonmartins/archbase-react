{"version":3,"file":"ArchbaseSpaceTemplate-45ed04a4.js","sources":["../../src/components/template/ArchbaseSpaceTemplate.tsx"],"sourcesContent":["import React, { CSSProperties, Fragment, ReactNode, useEffect, useMemo, useRef, useState } from 'react';\nimport type { ArchbaseDataSource } from '../datasource';\nimport {\n  ArchbaseQueryBuilder,\n  ArchbaseQueryFilter,\n  ArchbaseQueryFilterDelegator,\n  ArchbaseQueryFilterState,\n  FilterOptions,\n  getDefaultEmptyFilter,\n} from '../querybuilder';\nimport {\n  ArchbaseSpaceTop,\n  ArchbaseSpaceFill,\n  ArchbaseSpaceBottom,\n  ArchbaseSpaceFixed,\n} from '@components/layout/spaces';\nimport { ArchbaseAlert } from '../notification';\nimport { IconBug, IconEdit, IconEye } from '@tabler/icons-react';\nimport { t } from 'i18next';\nimport useComponentSize, { ComponentSize } from '@rehooks/component-size';\nimport {\n  Box,\n  Button,\n  ColSpan,\n  Flex,\n  Grid,\n  MantineNumberSize,\n  Pagination,\n  Paper,\n  ScrollArea,\n  SystemProp,\n  Text,\n  Variants,\n  px,\n} from '@mantine/core';\nimport { useArchbaseAppContext } from '../core';\nimport { useHotkeys, useUncontrolled } from '@mantine/hooks';\nimport { ArchbaseDebugOptions } from './ArchbaseTemplateCommonTypes';\nimport { ArchbaseDebugInspector } from '@components/debug/objectinspector';\n\ninterface ArchbaseBreakpointsColSpans {\n  /** Col span em (min-width: theme.breakpoints.xs) */\n  xs?: ColSpan;\n  /** Col span em (min-width: theme.breakpoints.sm) */\n  sm?: ColSpan;\n  /** Col span em (min-width: theme.breakpoints.md) */\n  md?: ColSpan;\n  /** Col span em (min-width: theme.breakpoints.lg) */\n  lg?: ColSpan;\n  /** Col span em (min-width: theme.breakpoints.xl) */\n  xl?: ColSpan;\n}\n\nexport interface ArchbaseSpaceTemplateOptions {\n  /** Indicar qual lado do header irá crescer para preencher o espaço sobrando (Válido somente quando headerGridColumns não é atribuído ao options) */\n  headerFlexGrow?: 'left' | 'even' | 'right';\n  /** Justificar o conteúdo interno da parte direita do header.*/\n  headerFlexRightJustifyContent?: SystemProp<CSSProperties['justifyContent']>;\n  /** Justificar o conteúdo interno da parte esquerda do header.*/\n  headerFlexLeftJustifyContent?: SystemProp<CSSProperties['justifyContent']>;\n  /** Indicar os ColSpan das grids para cada parte do header (left, middle, right) de acordo com os breakpoints */\n  headerGridColumns?: {\n    right?: ArchbaseBreakpointsColSpans;\n    middle?: ArchbaseBreakpointsColSpans;\n    left?: ArchbaseBreakpointsColSpans;\n  };\n  /** Indicar qual lado do footer irá crescer para preencher o espaço sobrando (Válido somente quando footerGridColumns não é atribuído ao options) */\n  footerFlexGrow?: 'left' | 'even' | 'right';\n  /** Justificar o conteúdo interno da parte direita do footer.*/\n  footerFlexRightJustifyContent?: SystemProp<CSSProperties['justifyContent']>;\n  /** Justificar o conteúdo interno da parte esquerda do footer.*/\n  footerFlexLeftJustifyContent?: SystemProp<CSSProperties['justifyContent']>;\n  /** Indicar os ColSpan das grids para cada parte do footer (left, middle, right) de acordo com os breakpoints */\n  footerGridColumns?: {\n    right?: ArchbaseBreakpointsColSpans;\n    middle?: ArchbaseBreakpointsColSpans;\n    left?: ArchbaseBreakpointsColSpans;\n  };\n}\n\nexport interface ArchbaseSpaceTemplateProps<T, ID> {\n  title: string;\n  variant?: Variants<'filled' | 'outline' | 'light' | 'white' | 'default' | 'subtle' | 'gradient'>;\n  headerLeft?: ReactNode;\n  headerMiddle?: ReactNode;\n  headerRight?: ReactNode;\n  footerLeft?: ReactNode;\n  footerMiddle?: ReactNode;\n  footerRight?: ReactNode;\n  /** Referência para o componente interno */\n  innerRef?: React.RefObject<HTMLInputElement> | undefined;\n  width?: number | string | undefined;\n  height?: number | string | undefined;\n  withBorder?: boolean;\n  children?: React.ReactNode;\n  radius?: MantineNumberSize;\n  debug?: boolean;\n  defaultDebug?: boolean;\n  isError?: boolean;\n  error?: string | undefined;\n  clearError?: () => void;\n  /** Opções de personalização */\n  options?: ArchbaseSpaceTemplateOptions;\n  style?: CSSProperties;\n  debugOptions?: ArchbaseDebugOptions;\n}\n\nfunction buildHeader(\n  options: ArchbaseSpaceTemplateOptions,\n  headerLeft: ReactNode,\n  headerRight: ReactNode,\n  debug: boolean,\n) {\n  if (options && options.headerGridColumns) {\n    const footerGridColumnsLeft: ArchbaseBreakpointsColSpans = options.headerGridColumns.left\n      ? options.headerGridColumns.left\n      : { xs: 'auto', sm: 'auto', md: 'auto', lg: 'auto' };\n    const footerGridColumnsMiddle: ArchbaseBreakpointsColSpans = options.headerGridColumns.middle\n      ? options.headerGridColumns.middle\n      : { xs: 'auto', sm: 'auto', md: 'auto', lg: 'auto' };\n    const headerGridColumnsRight: ArchbaseBreakpointsColSpans = options.headerGridColumns.right\n      ? options.headerGridColumns.right\n      : { xs: 'auto', sm: 'auto', md: 'auto', lg: 'auto' };\n\n    return (\n      <Grid m={0} gutter=\"xs\" justify=\"center\" align=\"center\" grow>\n        <Grid.Col\n          xs={footerGridColumnsLeft.xs}\n          sm={footerGridColumnsLeft.sm}\n          md={footerGridColumnsLeft.md}\n          lg={footerGridColumnsLeft.lg}\n          sx={{\n            border: debug ? '1px dashed' : '',\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n          }}\n        >\n          {headerLeft}\n        </Grid.Col>\n        <Grid.Col\n          xs={footerGridColumnsMiddle.xs}\n          sm={footerGridColumnsMiddle.sm}\n          md={footerGridColumnsMiddle.md}\n          lg={footerGridColumnsMiddle.lg}\n          sx={{\n            border: debug ? '1px dashed' : '',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        ></Grid.Col>\n        <Grid.Col\n          xs={headerGridColumnsRight.xs}\n          sm={headerGridColumnsRight.sm}\n          md={headerGridColumnsRight.md}\n          lg={headerGridColumnsRight.lg}\n          sx={{\n            border: debug ? '1px dashed' : '',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n          }}\n        >\n          {headerRight}\n        </Grid.Col>\n      </Grid>\n    );\n  } else {\n    const headerFlexGrow = options && options.headerFlexGrow ? options.headerFlexGrow : 'even';\n    const headerFlexRightJustifyContent =\n      options && options.headerFlexRightJustifyContent ? options.headerFlexRightJustifyContent : 'flex-end';\n    const headerFlexLeftJustifyContent =\n      options && options.headerFlexLeftJustifyContent ? options.headerFlexLeftJustifyContent : 'flex-start';\n\n    return (\n      <Flex justify={'space-between'}>\n        <Flex\n          w={headerFlexGrow === 'left' || headerFlexGrow === 'even' ? '100%' : undefined}\n          maw={headerFlexGrow === 'left' || headerFlexGrow === 'even' ? undefined : '100%'}\n          align={'center'}\n          justify={headerFlexLeftJustifyContent}\n          sx={{\n            border: debug ? '1px dashed' : '',\n          }}\n        >\n          {headerLeft}\n        </Flex>\n        <Flex\n          w={headerFlexGrow === 'right' || headerFlexGrow === 'even' ? '100%' : undefined}\n          maw={headerFlexGrow === 'right' || headerFlexGrow === 'even' ? undefined : '100%'}\n          align={'center'}\n          justify={headerFlexRightJustifyContent}\n          sx={{\n            border: debug ? '1px dashed' : '',\n          }}\n        >\n          {headerRight}\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nfunction buildFooter(\n  options: ArchbaseSpaceTemplateOptions,\n  footerLeft: ReactNode,\n  footerRight: ReactNode,\n  debug: boolean,\n) {\n  if (options && options.footerGridColumns) {\n    const footerGridColumnsLeft: ArchbaseBreakpointsColSpans = options.footerGridColumns.left\n      ? options.footerGridColumns.left\n      : { xs: 'auto', sm: 'auto', md: 'auto', lg: 'auto' };\n    const footerGridColumnsMiddle: ArchbaseBreakpointsColSpans = options.footerGridColumns.middle\n      ? options.footerGridColumns.middle\n      : { xs: 'auto', sm: 'auto', md: 'auto', lg: 'auto' };\n    const footerGridColumnsRight: ArchbaseBreakpointsColSpans = options.footerGridColumns.right\n      ? options.footerGridColumns.right\n      : { xs: 'auto', sm: 'auto', md: 'auto', lg: 'auto' };\n\n    return (\n      <Grid\n        m={0}\n        // sx={{ height: 60, position: 'relative', bottom: 6, left: 0, right: 0 }}\n        gutter=\"xs\"\n        justify=\"center\"\n        align=\"center\"\n        grow\n      >\n        <Grid.Col\n          xs={footerGridColumnsLeft.xs}\n          sm={footerGridColumnsLeft.sm}\n          md={footerGridColumnsLeft.md}\n          lg={footerGridColumnsLeft.lg}\n          style={{\n            border: debug ? '1px dashed' : '',\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n          }}\n          span=\"content\"\n        >\n          {footerLeft}\n        </Grid.Col>\n        <Grid.Col\n          xs={footerGridColumnsMiddle.xs}\n          sm={footerGridColumnsMiddle.sm}\n          md={footerGridColumnsMiddle.md}\n          lg={footerGridColumnsMiddle.lg}\n          style={{\n            border: debug ? '1px dashed' : '',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n          span=\"auto\"\n        ></Grid.Col>\n        <Grid.Col\n          xs={footerGridColumnsRight.xs}\n          sm={footerGridColumnsRight.sm}\n          md={footerGridColumnsRight.md}\n          lg={footerGridColumnsRight.lg}\n          style={{\n            border: debug ? '1px dashed' : '',\n            display: 'flex',\n            justifyContent: 'flex-end',\n            alignItems: 'center',\n          }}\n          span=\"content\"\n        >\n          {footerRight}\n        </Grid.Col>\n      </Grid>\n    );\n  } else {\n    const footerFlexGrow = options && options.footerFlexGrow ? options.footerFlexGrow : 'even';\n    const footerFlexRightJustifyContent =\n      options && options.footerFlexRightJustifyContent ? options.footerFlexRightJustifyContent : 'flex-end';\n    const footerFlexLeftJustifyContent =\n      options && options.footerFlexLeftJustifyContent ? options.footerFlexLeftJustifyContent : 'flex-start';\n\n    return (\n      <Flex justify={'space-between'}>\n        <Flex\n          w={footerFlexGrow === 'left' || footerFlexGrow === 'even' ? '100%' : undefined}\n          maw={footerFlexGrow === 'left' || footerFlexGrow === 'even' ? undefined : '100%'}\n          align={'center'}\n          justify={footerFlexLeftJustifyContent}\n          sx={{ border: debug ? '1px dashed' : '', height: 'auto', padding: 'calc(0.625rem / 2)' }}\n        >\n          {footerLeft}\n        </Flex>\n        <Flex\n          w={footerFlexGrow === 'right' || footerFlexGrow === 'even' ? '100%' : undefined}\n          maw={footerFlexGrow === 'right' || footerFlexGrow === 'even' ? undefined : '100%'}\n          align={'center'}\n          justify={footerFlexRightJustifyContent}\n          sx={{ border: debug ? '1px dashed' : '', height: 'auto', padding: 'calc(0.625rem / 2)' }}\n        >\n          {footerRight}\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport function ArchbaseSpaceTemplate<T extends object, ID>({\n  title,\n  innerRef,\n  isError = false,\n  error = '',\n  clearError,\n  width = '100%',\n  height = '100%',\n  withBorder = true,\n  children,\n  radius,\n  debug,\n  defaultDebug,\n  headerLeft,\n  headerMiddle,\n  headerRight,\n  footerLeft,\n  footerMiddle,\n  footerRight,\n  variant,\n  options = {},\n  style,\n  debugOptions,\n}: ArchbaseSpaceTemplateProps<T, ID>) {\n  const [_debug, setDebug] = useUncontrolled({\n    value: debug,\n    defaultValue: defaultDebug,\n    finalValue: false,\n  });\n  useHotkeys([[debugOptions && debugOptions.debugLayoutHotKey, () => setDebug(!_debug)]]);\n  const appContext = useArchbaseAppContext();\n  const innerComponentRef = innerRef || useRef<any>();\n  const headerRef = useRef<any>();\n  const footerRef = useRef<any>();\n  let headerSize = useComponentSize(headerRef);\n  let footerSize = useComponentSize(footerRef);\n  let innerComponentSize = useComponentSize(innerComponentRef);\n  let contentSize: ComponentSize = {\n    height: innerComponentSize.height - headerSize.height - footerSize.height - px('0.625rem'),\n    width: innerComponentSize.width - headerSize.width - footerSize.width,\n  };\n\n  const debugRef = useRef<boolean>(defaultDebug);\n\n  useEffect(() => {\n    if (defaultDebug !== debugRef.current) {\n      setDebug(defaultDebug);\n      debugRef.current = defaultDebug;\n    }\n  }, [defaultDebug, setDebug]);\n\n  return (\n    <>\n      <Paper\n        ref={innerComponentRef}\n        withBorder={withBorder}\n        radius={radius}\n        style={{ width: width, height: height, padding: 4, ...style }}\n      >\n        <ArchbaseSpaceFixed height={'100%'}>\n          <ArchbaseSpaceTop size={headerSize.height}>\n            <div ref={headerRef}>{buildHeader(options, headerLeft, headerRight, _debug)}</div>\n          </ArchbaseSpaceTop>\n          <ArchbaseSpaceFill>\n            <ScrollArea\n              h={contentSize.height}\n              sx={{ border: _debug ? '1px dashed' : '', padding: 'calc(0.625rem / 2)' }}\n            >\n              {children ? (\n                <Fragment>\n                  {isError && (\n                    <ArchbaseAlert\n                      autoClose={20000}\n                      withCloseButton={true}\n                      withBorder={true}\n                      icon={<IconBug size=\"1.4rem\" />}\n                      title={t('WARNING')}\n                      titleColor=\"rgb(250, 82, 82)\"\n                      variant={variant ?? appContext.variant}\n                      onClose={() => clearError && clearError()}\n                    >\n                      <span>{error}</span>\n                    </ArchbaseAlert>\n                  )}\n                  {children}\n                </Fragment>\n              ) : (\n                _debug && (\n                  <Flex h={contentSize.height + 80} justify=\"center\" align=\"center\" wrap=\"wrap\">\n                    <Text size=\"lg\">INSIRA O CONTEÚDO DO PAINEL AQUI.</Text>\n                  </Flex>\n                )\n              )}\n            </ScrollArea>\n          </ArchbaseSpaceFill>\n          <ArchbaseSpaceBottom size={footerSize.height}>\n            <div ref={footerRef}>{buildFooter(options, footerLeft, footerRight, _debug)}</div>\n          </ArchbaseSpaceBottom>\n        </ArchbaseSpaceFixed>\n      </Paper>\n      <ArchbaseDebugInspector\n        debugObjectInspectorHotKey={debugOptions && debugOptions.debugObjectInspectorHotKey}\n        objectsToInspect={debugOptions && debugOptions.objectsToInspect}\n      />\n    </>\n  );\n}\n"],"names":["buildHeader","options","headerLeft","headerRight","debug","footerGridColumnsLeft","footerGridColumnsMiddle","headerGridColumnsRight","jsxs","Grid","jsx","headerFlexGrow","headerFlexRightJustifyContent","headerFlexLeftJustifyContent","Flex","buildFooter","footerLeft","footerRight","footerGridColumnsRight","footerFlexGrow","footerFlexRightJustifyContent","footerFlexLeftJustifyContent","ArchbaseSpaceTemplate","title","innerRef","isError","error","clearError","width","height","withBorder","children","radius","defaultDebug","headerMiddle","footerMiddle","variant","style","debugOptions","_debug","setDebug","useUncontrolled","useHotkeys","appContext","useArchbaseAppContext","innerComponentRef","useRef","headerRef","footerRef","headerSize","useComponentSize","footerSize","innerComponentSize","contentSize","px","debugRef","useEffect","Fragment","Paper","ArchbaseSpaceFixed","ArchbaseSpaceTop","ArchbaseSpaceFill","ScrollArea","Fragment2","ArchbaseAlert","IconBug","t","Text","ArchbaseSpaceBottom","ArchbaseDebugInspector"],"mappings":"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"}