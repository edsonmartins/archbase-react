{"version":3,"file":"useArchbaseRemoteDataSource-0c2e1817.js","sources":["../../src/components/querybuilder/ArchbaseFilterDSL.js","../../src/components/datasource/ArchbaseRemoteDataSource.ts","../../src/components/hooks/useArchbaseRemoteDataSource.ts"],"sourcesContent":["/* eslint-disable */\nexport const Operator = {\n  IS: 'IS',\n  BETWEEN: 'BETWEEN',\n  LIKE: 'LIKE',\n  EQ: 'EQ',\n  NEQ: 'NEQ',\n  GEQ: 'GEQ',\n  LEQ: 'LEQ',\n  GT: 'GT',\n  LT: 'LT',\n  NOT: 'NOT',\n  IN: 'IN',\n  IS_NOT: 'IS_NOT',\n  AND: 'AND',\n  OR: 'OR'\n}\n\nfunction is(type, obj) {\n  const clas = Object.prototype.toString.call(obj).slice(8, -1)\n  return obj !== undefined && obj !== null && clas === type\n}\n\nfunction isOperator(operator) {\n  return (\n    operator === Operator.IS ||\n    operator === Operator.BETWEEN ||\n    operator === Operator.LIKE ||\n    operator === Operator.EQ ||\n    operator === Operator.NEQ ||\n    operator === Operator.GEQ ||\n    operator === Operator.LEQ ||\n    operator === Operator.GT ||\n    operator === Operator.LT ||\n    operator === Operator.NOT ||\n    operator === Operator.IN ||\n    operator === Operator.IS_NOT ||\n    operator === Operator.AND ||\n    operator === Operator.OR\n  )\n}\n\nexport const ExpressionType = {\n  FIELD: 'FIELD',\n  FILTER: 'FILTER',\n  GROUP: 'GROUP',\n  OPERATION: 'OPERATION',\n  AND: 'AND',\n  OR: 'OR',\n  IN: 'IN',\n  BETWEEN: 'BETWEEN'\n}\n\nexport class FilterException {\n  constructor(message) {\n    this.message = message\n    this.name = 'FilterException'\n  }\n}\n\n/**\n *\n *  Field Expression\n */\nclass FieldExpression {\n  constructor(fieldName, fieldSql) {\n    this.fieldName = fieldName\n    this.fieldSql = fieldSql\n    this.expressionType = ExpressionType.FIELD\n  }\n\n  getFieldName() {\n    return this.fieldName()\n  }\n\n  setFieldName(fieldName) {\n    this.fieldName = fieldName\n  }\n\n  toJSON(sb) {\n    sb.append('\"type\" : \"FIELD\",')\n    sb.append('\"name\" : \"' + this.fieldName + '\"')\n    if (this.fieldSql) {\n      sb.append(', \"nameSql\" : \"' + this.fieldSql + '\"')\n    }\n  }\n}\n\n/**\n *\n *  Filter Expression\n */\n\nclass FilterExpression {\n  constructor() {\n    this.expressionType = ExpressionType.FILTER\n  }\n\n  applyOperation(operator, value) {\n    throw new FilterException('applyOperation só pode ser usado nas classes concretas.')\n  }\n  applyInOperation() {\n    throw new FilterException('applyInOperation só pode ser usado nas classes concretas.')\n  }\n  applyNotInOperation() {\n    throw new FilterException('applyNotInOperation só pode ser usado nas classes concretas.')\n  }\n  applyBetweenOperation() {\n    throw new FilterException('applyBetweenOperation só pode ser usado nas classes concretas.')\n  }\n  EQ(value) {\n    return this.applyOperation(Operator.EQ, value)\n  }\n\n  NEQ(value) {\n    return this.applyOperation(Operator.NEQ, value)\n  }\n\n  GEQ(value) {\n    return this.applyOperation(Operator.GEQ, value)\n  }\n\n  GT(value) {\n    return this.applyOperation(Operator.GT, value)\n  }\n\n  LT(value) {\n    return this.applyOperation(Operator.LT, value)\n  }\n\n  AND() {\n    if (arguments.length === 3) {\n      return new AndExpression(\n        this,\n        new OperationExpression(arguments[0], arguments[1], arguments[2])\n      )\n    } else if (arguments.length === 1) {\n      if (typeof arguments[0] === 'object') {\n        if (arguments[0].expressionType === undefined) {\n          throw new FilterException(\n            'Tipo de parâmetro incorreto para uso de AND. Parâmetro ' + arguments[0]\n          )\n        } else {\n          if (arguments[0].expressionType === ExpressionType.FIELD) {\n            return new AndExpression(this, new OperationExpression(arguments[0]))\n          } else {\n            return new AndExpression(this, arguments[0])\n          }\n        }\n      } else {\n        throw new FilterException('Parâmetro deve ser do tipo Object.')\n      }\n    } else {\n      throw new FilterException('Número de parâmetros incorretos para a chamade de AND')\n    }\n  }\n\n  OR() {\n    if (arguments.length === 4) {\n      return new OrExpression(this, new OrExpression(arguments[0], arguments[1], arguments[2]))\n    } else if (arguments.length === 1) {\n      if (typeof arguments[0] === 'object') {\n        if (arguments[0].expressionType === undefined) {\n          throw new FilterException(\n            'Tipo de parâmetro incorreto para uso de OR. Parâmetro ' + arguments[0]\n          )\n        } else {\n          if (arguments[0].expressionType === ExpressionType.FIELD) {\n            return new OrExpression(this, new OperationExpression(arguments[0]))\n          } else {\n            return new OrExpression(this, arguments[0])\n          }\n        }\n      } else {\n        throw new FilterException('Parâmetro deve ser do tipo Object.')\n      }\n    } else {\n      throw new FilterException('Número de parâmetros incorretos para a chamade de OR')\n    }\n  }\n\n  LEQ(value) {\n    return this.applyOperation(Operator.LEQ, value)\n  }\n\n  LIKE(value) {\n    return this.applyOperation(Operator.LIKE, value)\n  }\n\n  BETWEEN(valueStart, valueEnd) {\n    return this.applyBetweenOperation(valueStart, valueEnd)\n  }\n\n  STARTSWITH(value) {\n    if (ArchbaseStringUtils.isEmpty(value)) {\n      throw new FilterException('Para usar STARTSWITH informe um valor.')\n    }\n    value = value.concat('%')\n    return this.applyOperation(Operator.LIKE, value)\n  }\n\n  ENDSWITH(value) {\n    if (ArchbaseStringUtils.isEmpty(value)) {\n      throw new FilterException('Para usar ENDSWITH informe um valor.')\n    }\n    value = '%'.concat(value)\n    return this.applyOperation(Operator.LIKE, value)\n  }\n\n  CONTAINS(value) {\n    if (ArchbaseStringUtils.isEmpty(value)) {\n      throw new FilterException('Para usar v informe um valor.')\n    }\n    value = '%'.concat(value.concat('%'))\n    return this.applyOperation(Operator.LIKE, value)\n  }\n\n  IN() {\n    return this.applyInOperation(arguments[0])\n  }\n\n  NOTIN() {\n    return this.applyNotInOperation(arguments[0])\n  }\n\n  ISNULL() {\n    return this.applyOperation(Operator.IS, 'NULL')\n  }\n\n  ISNOTNULL() {\n    return this.applyOperation(Operator.IS_NOT, 'NULL')\n  }\n  toJSON(sb) {\n    throw new FilterException(\n      'toJSON deve ser implementado nas classes concretas herdadas de FilterExpression.'\n    )\n  }\n}\n\n/**\n *\n *  Operation Expression\n */\n\nclass OperationExpression extends FilterExpression {\n  constructor(lhsValue, operator, rhsValue) {\n    super()\n    this.lhsValue = lhsValue\n    this.rhsValue = rhsValue\n    this.operator = operator\n    this.expressionType = ExpressionType.OPERATION\n  }\n\n  applyOperation(newOperator, newRhsValue) {\n    if (!isOperator(newOperator)) {\n      throw new FilterException(newOperator + ' não é um operador válido.')\n    }\n\n    if (this.operator !== undefined) {\n      throw new FilterException(\n        'Não é possível aplicar ' +\n          newOperator +\n          ' operation on an ' +\n          this.operator +\n          ' expression.'\n      )\n    }\n\n    return new OperationExpression(this.lhsValue, newOperator, newRhsValue)\n  }\n\n  applyInOperation() {\n    if (arguments[0].length === 0) {\n      throw new FilterException('Para usar operação IN é necessário informar os valores.')\n    }\n\n    if (!(this.lhsValue instanceof FieldExpression)) {\n      throw new FilterException(\"Somente é possível aplicar a operação 'IN' em uma coluna.\")\n    }\n    return new InExpression(this.lhsValue, false, arguments[0])\n  }\n\n  applyNotInOperation() {\n    if (arguments[0].length === 0) {\n      throw new FilterException('Para usar operação NOT IN é necessário informar os valores.')\n    }\n\n    if (!(this.lhsValue instanceof FieldExpression)) {\n      throw new FilterException(\"Somente é possível aplicar a operação 'NOT IN' em uma coluna.\")\n    }\n    return new InExpression(this.lhsValue, true, arguments[0])\n  }\n\n  applyBetweenOperation(valueStart, valueEnd) {\n    if (valueStart === undefined) {\n      throw new FilterException('Para usar operação BETWEEN é necessário informar o valor inicial.')\n    }\n\n    if (valueEnd === undefined) {\n      throw new FilterException('Para usar operação BETWEEN é necessário informar o valor final.')\n    }\n\n    if (!(this.lhsValue instanceof FieldExpression)) {\n      throw new FilterException(\"Somente é possível aplicar a operação 'BETWEEN' em uma coluna.\")\n    }\n    return new BetweenExpression(this.lhsValue, valueStart, valueEnd)\n  }\n  toJSON(sb) {\n    sb.append('\"type\" : \"OP\",')\n    sb.append('\"lhsValue\" : {')\n    this.lhsValue.toJSON(sb)\n    sb.append('},')\n    if (is('Number', this.rhsValue)) {\n      sb.append('\"rhsValue\" : ' + this.rhsValue + ',')\n    } else {\n      sb.append('\"rhsValue\" : \"' + this.rhsValue + '\",')\n    }\n\n    sb.append('\"operator\" : \"' + this.operator + '\"')\n  }\n}\n\n/**\n *\n *  Group Expression\n */\n\nclass GroupExpression extends FilterExpression {\n  constructor(expressions) {\n    super()\n    this.expressions = expressions\n    this.expressionType = ExpressionType.GROUP\n  }\n\n  getExpressions() {\n    return this.expressions\n  }\n\n  getOperator() {\n    throw new FilterException(\n      'Uso incorreto do método. Este método deve ser implementado por classes concretas que herdam de GroupExpression.'\n    )\n  }\n  applyOperation(operator, value) {\n    const lastIndex = this.expressions.length - 1\n    const lastClause = this.expressions[lastIndex]\n    this.expressions[lastIndex] = lastClause.applyOperation(operator, value)\n    return this\n  }\n  applyInOperation() {\n    const lastIndex = this.expressions.length - 1\n    const lastClause = this.expressions[lastIndex]\n    this.expressions[lastIndex] = lastClause.applyInOperation(arguments[0])\n    return this\n  }\n  applyNotInOperation() {\n    const lastIndex = this.expressions.length - 1\n    const lastClause = this.expressions[lastIndex]\n    this.expressions[lastIndex] = lastClause.applyNotInOperation(arguments[0])\n    return this\n  }\n  applyBetweenOperation(valueStart, valueEnd) {\n    const lastIndex = this.expressions.length - 1\n    const lastClause = this.expressions[lastIndex]\n    this.expressions[lastIndex] = lastClause.applyBetweenOperation(valueStart, valueEnd)\n    return this\n  }\n  toJSON(sb) {\n    sb.append('\"type\" : \"' + this.getOperator() + '\",')\n    sb.append('\"expressions\" : [')\n    let appendDelimiter = false\n    for (let i = 0; i < this.expressions.length; i++) {\n      if (appendDelimiter) {\n        sb.append(',')\n      }\n      sb.append('{')\n      this.expressions[i].toJSON(sb)\n      sb.append('}')\n\n      appendDelimiter = true\n    }\n    sb.append(']')\n  }\n}\n\n/**\n *\n *  IN Expression\n */\nclass InExpression extends FilterExpression {\n  constructor() {\n    super()\n    if (arguments.length < 3) {\n      throw new FilterException('Para usar a expressão IN informe os parâmetros corretamente.')\n    }\n\n    this.field = arguments[0]\n    this.negative = arguments[1]\n    this.values = arguments[2]\n    this.expressionType = ExpressionType.IN\n  }\n\n  isNegative() {\n    return this.negative\n  }\n\n  applyOperation(operator, value) {\n    throw new FilterException('Não é possível aplicar a operação ' + operator + ' na expressão IN.')\n  }\n  applyInOperation() {\n    throw new FilterException('Não é possível aplicar a operação IN na expressão IN.')\n  }\n  applyNotInOperation() {\n    throw new FilterException('Não é possível aplicar a operação NOT IN na expressão IN.')\n  }\n  applyBetweenOperation(valueStart, valueEnd) {\n    throw new FilterException('Não é possível aplicar a operação BETWEEEN na expressão IN.')\n  }\n  toJSON(sb) {\n    sb.append('\"type\" : \"IN\",')\n    sb.append('\"field\" : {')\n    this.field.toJSON(sb)\n    sb.append('},')\n    sb.append('\"values\" : [')\n    let appendDelimiter = false\n\n    for (let i = 0; i < this.values.length; i++) {\n      if (appendDelimiter) sb.append(',')\n\n      if (is('Number', this.values[i])) {\n        sb.append(this.values[i])\n      } else {\n        sb.append('\"' + this.values[i] + '\"')\n      }\n      appendDelimiter = true\n    }\n    sb.append('],')\n    sb.append('\"negative\" : ' + this.negative)\n  }\n}\n\n/**\n *\n *  BETWEEN Expression\n */\nclass BetweenExpression extends FilterExpression {\n  constructor(field, valueStart, valueEnd) {\n    super()\n    if (field === undefined) {\n      throw new FilterException('Informe o valor do field para usar BETWEEN.')\n    }\n    if (valueStart === undefined) {\n      throw new FilterException('Informe o valor inicial para usar BETWEEN.')\n    }\n    if (valueEnd === undefined) {\n      throw new FilterException('Informe o valor final para usar BETWEEN.')\n    }\n\n    this.field = field\n    this.valueStart = valueStart\n    this.valueEnd = valueEnd\n    this.expressionType = ExpressionType.BETWEEN\n  }\n\n  applyOperation(operator, value) {\n    throw new FilterException(\n      'Não é possível aplicar a operação ' + operator + ' na expressão BETWEEN.'\n    )\n  }\n  applyInOperation() {\n    throw new FilterException('Não é possível aplicar a operação IN na expressão BETWEEN.')\n  }\n  applyNotInOperation() {\n    throw new FilterException('Não é possível aplicar a operação NOT IN na expressão BETWEEN.')\n  }\n  applyBetweenOperation(valueStart, valueEnd) {\n    throw new FilterException('Não é possível aplicar a operação BETWEEEN na expressão BETWEEN.')\n  }\n  toJSON(sb) {\n    sb.append('\"type\" : \"BETWEEN\",')\n    sb.append('\"field\" : {')\n    this.field.toJSON(sb)\n    sb.append('},')\n    if (is('Number', this.valueStart)) {\n      sb.append('\"valueStart\" : ' + this.valueStart + ',')\n    } else {\n      sb.append('\"valueStart\" : \"' + this.valueStart + '\",')\n    }\n    if (is('Number', this.valueEnd)) {\n      sb.append('\"valueEnd\" : ' + this.valueEnd)\n    } else {\n      sb.append('\"valueEnd\" : \"' + this.valueEnd + '\"')\n    }\n  }\n}\n\n/**\n *\n *  AND Expression\n */\nclass AndExpression extends GroupExpression {\n  constructor() {\n    const expressions = []\n    for (let i = 0; i < arguments.length; i++) {\n      expressions.push(arguments[i])\n    }\n    super(expressions)\n    this.expressionType = ExpressionType.AND\n  }\n\n  getOperator() {\n    return Operator.AND\n  }\n}\n\n/**\n *\n *  OR Expression\n */\nclass OrExpression extends GroupExpression {\n  constructor() {\n    const expressions = []\n    for (let i = 0; i < arguments.length; i++) {\n      expressions.push(arguments[i])\n    }\n\n    super(expressions)\n    this.expressionType = ExpressionType.OR\n  }\n\n  getOperator() {\n    return Operator.OR\n  }\n}\n\n/**\n *\n * ArchbaseFilterDSL\n */\nexport class ArchbaseFilterDSL {\n  constructor() {\n    this.filterExpression = null\n    this.fieldsToSort = []\n    this.processRules = this.processRules.bind(this)\n    this.WHERE = this.WHERE.bind(this)\n    this.EQ = this.EQ.bind(this)\n    this.NEQ = this.NEQ.bind(this)\n    this.GEQ = this.GEQ.bind(this)\n    this.LEQ = this.LEQ.bind(this)\n    this.GT = this.GT.bind(this)\n    this.LT = this.LT.bind(this)\n    this.LIKE = this.LIKE.bind(this)\n    this.IN = this.IN.bind(this)\n    this.NOTIN = this.NOTIN.bind(this)\n    this.AND = this.AND.bind(this)\n    this.OR = this.OR.bind(this)\n    this.ISNULL = this.ISNULL.bind(this)\n    this.ISNOTNULL = this.ISNOTNULL.bind(this)\n    this.betweenOrOp = this.betweenOrOp.bind(this)\n    this.BETWEEN = this.BETWEEN.bind(this)\n    this.OP = this.OP.bind(this)\n    this.STARTSWITH = this.STARTSWITH.bind(this)\n    this.CONTAINS = this.CONTAINS.bind(this)\n    this.toJSON = this.toJSON.bind(this)\n  }\n  assertWhereClauseIsInitialized(operation) {\n    if (this.filterExpression === null || this.filterExpression === undefined)\n      throw new FilterException(\n        \"Não é possível aplicar '\" + operation + \"' operador se o cláusula WHERE não existir.\"\n      )\n  }\n\n  buildFrom(query, sort) {\n    if (query.rules) {\n      this.processRules(query.condition, query.rules, true)\n      if (sort && sort.sortFields) {\n        sort.sortFields.forEach((field) => {\n          if (field.selected) {\n            this.fieldsToSort.push(field.name + ' ' + field.asc_desc)\n          }\n        })\n      }\n    }\n  }\n\n  processRules(condition, rules, addWhere) {\n    rules.forEach((rule) => {\n      if (rule.field && !rule.disabled) {\n        let CONDITION = _this.AND\n        if (condition === 'or') {\n          CONDITION = _this.OR\n        }\n        if (addWhere) {\n          CONDITION = _this.WHERE\n        }\n        let newValue = rule.value\n        let newValue2 = rule.value2\n        if (newValue && newValue !== '') {\n          if (rule.dataType === 'date') {\n            newValue = ArchbaseDateUtils.formatDate(\n              ArchbaseDateUtils.parseDateWithFormat(newValue, 'DD/MM/YYYY'),\n              Archbase.dataSourceDatetimeFormat\n            )\n          } else if (rule.dataType === 'date_time') {\n            newValue = ArchbaseDateUtils.formatDate(\n              ArchbaseDateUtils.parseDateWithFormat(newValue, 'DD/MM/YYYY hh:mm:ss'),\n              Archbase.dataSourceDatetimeFormat\n            )\n          }\n        }\n\n        if (newValue2 && newValue2 !== '') {\n          if (rule.dataType === 'date') {\n            newValue2 = ArchbaseDateUtils.formatDate(\n              ArchbaseDateUtils.parseDateWithFormat(newValue2, 'DD/MM/YYYY'),\n              Archbase.dataSourceDatetimeFormat\n            )\n          } else if (rule.dataType === 'date_time') {\n            newValue2 = ArchbaseDateUtils.formatDate(\n              ArchbaseDateUtils.parseDateWithFormat(newValue2, 'DD/MM/YYYY hh:mm:ss'),\n              Archbase.dataSourceDatetimeFormat\n            )\n          }\n        }\n\n        if (rule.operator === 'null') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).ISNULL()\n          addWhere = false\n        } else if (rule.operator === 'notNull') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).ISNOTNULL()\n          addWhere = false\n        } else if (rule.operator === 'contains' && newValue && newValue !== '') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).CONTAINS(newValue)\n          addWhere = false\n        } else if (rule.operator === 'startsWith' && newValue && newValue !== '') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).STARTSWITH(newValue)\n          addWhere = false\n        } else if (rule.operator === 'endsWith' && newValue && newValue !== '') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).ENDSWITH(newValue)\n          addWhere = false\n        } else if (rule.operator === '=' && newValue && newValue !== '') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).EQ(newValue)\n          addWhere = false\n        } else if (rule.operator === '!=' && newValue && newValue !== '') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).NEQ(newValue)\n          addWhere = false\n        } else if (rule.operator === '<' && newValue && newValue !== '') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).LT(newValue)\n          addWhere = false\n        } else if (rule.operator === '>' && newValue && newValue !== '') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).GT(newValue)\n          addWhere = false\n        } else if (rule.operator === '<=' && newValue && newValue !== '') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).LEQ(newValue)\n          addWhere = false\n        } else if (rule.operator === '>=' && newValue && newValue !== '') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).GEQ(newValue)\n          addWhere = false\n        } else if (\n          rule.operator === 'between' &&\n          newValue &&\n          newValue !== '' &&\n          newValue2 &&\n          newValue2 !== ''\n        ) {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).BETWEEN(newValue, newValue2)\n          addWhere = false\n        } else if (rule.operator === 'inList' && newValue && newValue !== '') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).IN(newValue)\n          addWhere = false\n        } else if (rule.operator === 'notInList' && newValue && newValue !== '') {\n          CONDITION(_this.EXP(_this.FIELD(rule.field, rule.fieldSql))).NOTIN(newValue)\n          addWhere = false\n        }\n      }\n    })\n\n    rules.forEach((rule) => {\n      if (rule.rules) {\n        this.processRules(rule.condition, rule.rules, addWhere)\n      }\n    })\n  }\n\n  FIELD(name, nameSql) {\n    return new FieldExpression(name, nameSql)\n  }\n  EXP(field) {\n    return new OperationExpression(field)\n  }\n  WHERE() {\n    if (arguments.length < 1) {\n      throw new FilterException('Para criar uma condição WHERE informe ao menos um parâmetro.')\n    }\n    if (arguments.length === 3) {\n      if (arguments[2] !== undefined) {\n        this.filterExpression = new OperationExpression(arguments[0], arguments[1], arguments[2])\n      }\n    } else {\n      this.filterExpression = arguments[0]\n      if (\n        arguments[0].expressionType !== undefined &&\n        arguments[0].expressionType === ExpressionType.FIELD\n      ) {\n        this.filterExpression = new OperationExpression(arguments[0])\n      }\n    }\n    return this\n  }\n  EQ(value) {\n    this.assertWhereClauseIsInitialized('eq')\n    this.filterExpression = this.filterExpression.EQ(value)\n    return this\n  }\n  NEQ(value) {\n    this.assertWhereClauseIsInitialized('neq')\n    this.filterExpression = this.filterExpression.NEQ(value)\n    return this\n  }\n  GEQ(value) {\n    this.assertWhereClauseIsInitialized('geq')\n    this.filterExpression = this.filterExpression.GEQ(value)\n    return this\n  }\n  LEQ(value) {\n    this.assertWhereClauseIsInitialized('leq')\n    this.filterExpression = this.filterExpression.LEQ(value)\n    return this\n  }\n  GT(value) {\n    this.assertWhereClauseIsInitialized('gt')\n    this.filterExpression = this.filterExpression.GT(value)\n    return this\n  }\n  LT(value) {\n    this.assertWhereClauseIsInitialized('lt')\n    this.filterExpression = this.filterExpression.LT(value)\n    return this\n  }\n  LIKE(value) {\n    this.assertWhereClauseIsInitialized('like')\n    this.filterExpression = this.filterExpression.LIKE(value)\n    return this\n  }\n  IN() {\n    const values = []\n    for (let i = 0; i < arguments.length; i++) {\n      values.push(arguments[i])\n    }\n    this.assertWhereClauseIsInitialized('in')\n    this.filterExpression = this.filterExpression.IN(values)\n    return this\n  }\n  NOTIN() {\n    const values = []\n    for (let i = 0; i < arguments.length; i++) {\n      values.push(arguments[i])\n    }\n    this.assertWhereClauseIsInitialized('not in')\n    this.filterExpression = this.filterExpression.NOTIN(values)\n    return this\n  }\n  AND(columnOrExpression) {\n    this.assertWhereClauseIsInitialized('and')\n    this.filterExpression = this.filterExpression.AND(columnOrExpression)\n    return this\n  }\n  OR(columnOrExpression) {\n    this.assertWhereClauseIsInitialized('or')\n    this.filterExpression = this.filterExpression.OR(columnOrExpression)\n    return this\n  }\n  ISNULL() {\n    this.assertWhereClauseIsInitialized('isNull')\n    this.filterExpression = this.filterExpression.ISNULL()\n    return this\n  }\n  ISNOTNULL() {\n    this.assertWhereClauseIsInitialized('isNotNull')\n    this.filterExpression = this.filterExpression.ISNOTNULL()\n    return this\n  }\n  betweenOrOp(operator, valueStart, valueEnd) {\n    this.assertWhereClauseIsInitialized(operator)\n    this.filterExpression = this.filterExpression.betweenOrOp(operator, valueStart, valueEnd)\n    return this\n  }\n  BETWEEN(valueStart, valueEnd) {\n    this.assertWhereClauseIsInitialized('between')\n    this.filterExpression = this.filterExpression.BETWEEN(valueStart, valueEnd)\n    return this\n  }\n  OP(operator, value) {\n    this.assertWhereClauseIsInitialized(operator)\n    this.filterExpression = this.filterExpression.applyOperation(operator, value)\n    return this\n  }\n  STARTSWITH(value) {\n    this.assertWhereClauseIsInitialized('startsWith')\n    this.filterExpression = this.filterExpression.STARTSWITH(value)\n    return this\n  }\n  CONTAINS(value) {\n    this.assertWhereClauseIsInitialized('contains')\n    this.filterExpression = this.filterExpression.CONTAINS(value)\n    return this\n  }\n\n  SORTBY(field, desc) {\n    if (field instanceof FieldExpression) {\n      this.fieldsToSort.push(field.getFieldName + (desc === true ? ' DESC' : ' ASC'))\n    } else {\n      this.fieldsToSort.push(field + (desc === true ? ' DESC' : ' ASC'))\n    }\n  }\n\n  toJSON() {\n    if (this.filterExpression !== undefined && this.filterExpression != null) {\n      const sb = ArchbaseStringUtils.createStringBuilder()\n      sb.append('{')\n      sb.append('   \"filterExpression\" : {')\n      this.filterExpression.toJSON(sb)\n      sb.append('}, ')\n      sb.append('    \"fieldsToSort\" : [')\n      let appendDelimiter = false\n      this.fieldsToSort.forEach(function (field) {\n        if (appendDelimiter === true) {\n          sb.append(', ')\n        }\n        sb.append('{ \"field\" : \"' + field + '\" }')\n        appendDelimiter = true\n      })\n      sb.append(']')\n      sb.append('}')\n      return sb.toString()\n    }\n  }\n}\n","import i18next from 'i18next'\nimport { ArchbaseDataSourceError, processErrorMessage } from '../core/exceptions'\nimport {\n  DataSourceEventNames,\n  DataSourceOptions,\n  ArchbaseDataSource,\n  IDataSource\n} from './ArchbaseDataSource'\nimport { ADVANCED, ArchbaseQueryFilter, NORMAL, QUICK } from '../querybuilder/ArchbaseFilterCommons'\nimport { ArchbaseFilterDSL } from '../querybuilder/ArchbaseFilterDSL'\nimport { ArchbaseRemoteApiService } from '../service/ArchbaseRemoteApiService'\n\nexport interface IRemoteDataSource<T> extends IDataSource<T> {\n  applyRemoteFilter: (\n    filter: ArchbaseQueryFilter,\n    page: number,\n    callback?: (() => void) | undefined\n  ) => void\n}\n\nexport class ArchbaseRemoteDataSource<T, ID>\n  extends ArchbaseDataSource<T, ID>\n  implements IRemoteDataSource<T>\n{\n  protected service: ArchbaseRemoteApiService<T, ID>\n\n  constructor(\n    service: ArchbaseRemoteApiService<T, ID>,\n    name: string,\n    options: DataSourceOptions<T>,\n    label?: string\n  ) {\n    super(name, options, label)\n    this.service = service\n  }\n\n  public async save(callback?: Function): Promise<T> {\n    this.validateDataSourceActive('save')\n    if (!this.inserting && !this.editing) {\n      const msg = i18next.t('archbase:saveRecordIsNotAllowed', { dataSourceName: this.name })\n      this.publishEventError(msg,{})\n      throw new ArchbaseDataSourceError(msg)\n    }\n    if (!this.currentRecord) {\n      const msg = i18next.t('archbase:noRecordToSave', { dataSourceName: this.name })\n      this.publishEventError(msg,{})\n      throw new ArchbaseDataSourceError(msg)\n    }\n\n    this.emitter.emit('beforeSave', this.currentRecord)\n    this.emit({\n      type: DataSourceEventNames.beforeSave,\n      record: this.currentRecord,\n      index: this.getCurrentIndex()\n    })\n\n    if (this.validator){\n      const errors = this.validator.validateEntity<T>(this.currentRecord);\n      if (errors && errors.length>0){\n        this.publishEventErrors(errors);\n        if (!errors[0].fieldName) {\n          throw new ArchbaseDataSourceError(errors[0].errorMessage)\n        } else {\n          const msg = i18next.t('archbase:errorSavingRecord', { dataSourceName: this.label })\n          throw new ArchbaseDataSourceError(msg)\n        }\n      }\n    }\n\n    try {\n      this.currentRecord = await this.service.save<T>(this.currentRecord)\n      if (this.editing) {\n        this.filteredRecords[this.getCurrentIndex()] = this.currentRecord!\n      }\n\n      let index = -1\n      this.records.forEach((item, idx) => {\n        if (item === this.currentRecord) {\n          index = idx\n        }\n      })\n      if (index >= 0) {\n        this.records[index] = this.currentRecord!\n      } else {\n        this.records.push(this.currentRecord!)\n      }\n      this.editing = false\n      this.inserting = false\n\n      this.lastDataChangedAt = new Date().getTime()\n\n      this.emitter.emit('afterSave', this.currentRecord)\n      this.emit({\n        type: DataSourceEventNames.afterSave,\n        record: this.currentRecord,\n        index: this.getCurrentIndex()\n      })\n\n      if (callback) {\n        callback()\n      }\n    } catch (error:any) {\n      if (error.response && error.response.data && error.response.data.apierror) {\n        if (error.response.data.apierror.subErrors) {\n          error.response.data.apierror.subErrors.forEach((element: any) => {\n            if (element.field){\n              this.emitter.emit(\"onFieldError\",element.field, element.message)\n              this.emit({\n                type: DataSourceEventNames.onFieldError,\n                fieldName: element.field,\n                error: element.message,\n                originalError: element.message\n              })\n            }\n          })\n        }\n      }\n      const userError = processErrorMessage(error)\n      this.emitter.emit('onError', userError, error)\n      this.emit({\n        type: DataSourceEventNames.onError,\n        error: userError,\n        originalError: error\n      })\n      if (callback) {\n        callback(userError)\n      }\n      throw new ArchbaseDataSourceError(userError)\n    }\n\n    return this.currentRecord!\n  }\n\n  public async remove(callback?: Function): Promise<T | undefined> {\n    this.validateDataSourceActive('remove')\n    if (this.inserting || this.editing) {\n      const msg = i18next.t('archbase:removingRecordIsNotAllowed', { dataSourceName: this.name })\n      this.publishEventError(msg,{})\n      throw new ArchbaseDataSourceError(\n        msg\n      )\n    }\n    if (this.isEmpty() || !this.currentRecord) {\n      const msg = i18next.t('archbase:noRecordsToEdit', { dataSourceName: this.name })\n      this.publishEventError(msg,{})\n      throw new ArchbaseDataSourceError(msg)\n    }\n    if (this.isBOF()) {\n      const msg = i18next.t('archbase:BOFDataSource', { dataSourceName: this.name })\n      this.publishEventError(msg,{})\n      throw new ArchbaseDataSourceError(msg)\n    }\n    if (this.isEOF()) {\n      const msg = i18next.t('archbase:EOFDataSource', { dataSourceName: this.name })\n      this.publishEventError(msg,{})\n      throw new ArchbaseDataSourceError(msg)\n    }\n\n    this.emitter.emit('beforeRemove', this.currentRecord, this.currentRecordIndex)\n    this.emit({\n      type: DataSourceEventNames.beforeRemove,\n      record: this.currentRecord,\n      index: this.getCurrentIndex()\n    })\n\n    try {\n      await this.service.delete<T>(this.service.getId(this.currentRecord))\n\n      let index = -1\n      const deletedRecord = this.currentRecord\n      const deletedIndex = this.currentRecordIndex\n      this.records.forEach((item, idx) => {\n        if (this.currentRecord === item) {\n          index = idx\n        }\n      })\n      if (index >= 0) {\n        this.records.splice(index, 1)\n      }\n      this.filteredRecords.splice(this.getCurrentIndex(), 1)\n      this.grandTotalRecords--\n      if (this.filteredRecords.length === 0) {\n        this.currentRecord = undefined\n        this.currentRecordIndex = -1\n      } else {\n        if (this.currentRecordIndex>this.filteredRecords.length-1){\n          this.currentRecordIndex-- \n        }\n        this.currentRecord = this.filteredRecords[this.currentRecordIndex]\n      }\n      this.editing = false\n      this.inserting = false\n\n      this.emitter.emit('afterScroll')\n      this.emit({ type: DataSourceEventNames.afterScroll })\n      this.emitter.emit('afterRemove', deletedRecord, deletedIndex)\n      this.emit({\n        type: DataSourceEventNames.afterRemove,\n        record: deletedRecord,\n        index: deletedIndex\n      })\n\n      this.lastDataBrowsingOn = new Date().getTime()\n      this.lastDataChangedAt = new Date().getTime()\n\n      if (callback) {\n        callback()\n      }\n\n      return deletedRecord\n    } catch (error : any) {     \n\n      const userError = processErrorMessage(error)\n      this.emitter.emit('onError', userError, error)\n      this.emit({\n        type: DataSourceEventNames.onError,\n        error: userError,\n        originalError: error\n      })\n      if (callback) {\n        callback(userError)\n      }\n      throw new ArchbaseDataSourceError(userError)\n    }\n  }\n\n  public applyRemoteFilter(\n    filter: ArchbaseQueryFilter,\n    page: number,\n    _callback?: (() => void) | undefined\n  ) {\n    if (\n      filter &&\n      filter.filter.filterType === QUICK &&\n      filter.filter.quickFilterText &&\n      filter.filter.quickFilterText !== ''\n    ) {\n      return this.getDataWithQuickFilter(filter, page)\n    }\n    if (filter && (filter.filter.filterType === NORMAL || filter.filter.filterType === ADVANCED)) {\n      return this.getDataWithFilter(filter, page)\n    }\n\n    return this.getDataWithoutFilter(page)\n  }\n\n  protected async getDataWithFilter(\n    currentFilter: ArchbaseQueryFilter,\n    page: number\n  ): Promise<any> {\n    const filter = new ArchbaseFilterDSL()\n    filter.buildFrom(currentFilter.filter, currentFilter.sort)\n    const filterStr = filter.toJSON()\n    let result: any\n    if (filterStr) {\n      result = await this.service.findAllWithFilter(filter.toJSON(), page, this.getPageSize())\n    } else {\n      result = this.getDataWithoutFilter(page)\n    }\n\n    return result\n  }\n\n  protected getDataWithoutFilter(page: number): any {\n    let result: any\n    if (this.defaultSortFields.length > 0)\n      result = this.service.findAllWithSort(page, this.getPageSize(), this.defaultSortFields)\n    else result = this.service.findAll(page, this.getPageSize())\n\n    return result\n  }\n\n  protected getDataWithQuickFilter(currentFilter: ArchbaseQueryFilter, page: number) {\n    return this.service.findAllMultipleFields(\n      currentFilter.filter.quickFilterText,\n      currentFilter.filter.quickFilterFieldsText,\n      page,\n      this.getPageSize(),\n      this.getSortFields(currentFilter)\n    )\n  }\n\n  protected getSortFields(currentFilter: ArchbaseQueryFilter): any {\n    if (currentFilter && currentFilter.sort) {\n      return currentFilter.sort.quickFilterSort\n    }\n\n    return this.defaultSortFields\n  }\n}\n","import { useEffect, useState } from 'react'\nimport {\n  ArchbaseDataSource,\n  DataSourceEvent,\n  DataSourceEventRefreshDataType,\n  DataSourceOptions,\n  DataSourceEventNames\n} from '../datasource'\nimport { ArchbaseRemoteDataSource } from '../datasource/ArchbaseRemoteDataSource'\nimport { processErrorMessage } from '../core/exceptions'\nimport { ArchbaseRemoteApiService, DefaultPage, Page } from '../service/ArchbaseRemoteApiService'\nimport { ArchbaseStateValues } from '../template'\nimport { IDataSourceValidator } from '../datasource/ArchbaseDataSource'\nimport { ArchbaseStore } from './useArchbaseStore'\n\nexport type UseArchbaseRemoteDataSourceProps<T, ID> = {\n  name: string\n  label?: string\n  service: ArchbaseRemoteApiService<T, ID>\n  store?: ArchbaseStore\n  filter?: string\n  sort?: string[]\n  id?: ID\n  loadOnStart?: boolean\n  initialDataSource?: ArchbaseRemoteDataSource<T, ID> | undefined\n  pageSize?: number\n  currentPage?: number\n  transformData?: (data: any) => Page<T>\n  onLoadComplete?: (dataSource: ArchbaseRemoteDataSource<T, ID>) => void\n  onError?: (error, originError) => void\n  onDestroy?: (dataSource: ArchbaseRemoteDataSource<T, ID>) => void\n  filterData?: (data: any) => Page<T>\n  findAll?<T, ID>(page: number, size: number): Promise<Page<T>>\n  findAllWithSort?<T, ID>(page: number, size: number, sort: string[]): Promise<Page<T>>\n  findAllWithFilter?<T, ID>(filter: string, page: number, size: number): Promise<Page<T>>\n  findAllWithFilterAndSort?<T, ID>(\n    filter: string,\n    page: number,\n    size: number,\n    sort: string[]\n  ): Promise<Page<T>>\n  findOne?<T, ID>(id: ID): Promise<Page<T>>\n  validator?: IDataSourceValidator\n}\n\nexport type UseArchbaseRemoteDataSourceReturnType<T, ID> = {\n  dataSource: ArchbaseRemoteDataSource<T, ID>\n  isLoading: boolean\n  isError: boolean\n  error: any\n  clearError: () => void\n}\n\ntype UseArchbaseRemoteDataSourceState<T, ID> = {\n  dataSource: ArchbaseRemoteDataSource<T, ID>\n  isLoading: boolean\n  isError: boolean\n  error: any\n  name: string\n  label?: string\n  filter?: string\n  sort?: string[]\n  id?: ID\n  currentPage?: number\n  pageSize?: number\n  loadDataCount: number  \n}\nexport function useArchbaseRemoteDataSource<T, ID>(\n  props: UseArchbaseRemoteDataSourceProps<T, ID>\n): UseArchbaseRemoteDataSourceReturnType<T, ID> {\n  const {\n    name,\n    label,\n    service,\n    filter,\n    sort,\n    transformData,\n    onLoadComplete,\n    onDestroy,\n    filterData,\n    findAll,\n    findAllWithSort,\n    findAllWithFilter,\n    findAllWithFilterAndSort,\n    initialDataSource,\n    pageSize = 50,\n    currentPage = 0,\n    loadOnStart = true,\n    store,\n    id,\n    validator\n  } = props\n  const existsDataSource = () => {\n    if (store && store.existsValue(name)) {\n      return true\n    }\n    if (initialDataSource) {\n      return true\n    }\n    return false\n  }\n  const buildDataSource = () => {\n    if (store && store.existsValue(name)) {\n      return store.getValue(name)\n    }\n    if (initialDataSource) {\n      return initialDataSource\n    }\n    return new ArchbaseRemoteDataSource<T, ID>(service, name, {\n      records: [],\n      grandTotalRecords: 0,\n      currentPage,\n      totalPages: 0,\n      pageSize,\n      validator\n    }, label)\n  }\n  const getCurrentPage = () => {\n    if (store && store.existsValue(name)) {\n      return (store.getValue(name) as ArchbaseRemoteDataSource<T, ID>).getCurrentPage()\n    }\n    if (initialDataSource) {\n      return initialDataSource.getCurrentPage()\n    }\n    return 0\n  }\n  const [internalState, setInternalState] = useState<UseArchbaseRemoteDataSourceState<T, ID>>({\n    dataSource: buildDataSource(),\n    isLoading: false,\n    isError: false,\n    error: '',\n    name,\n    label,\n    filter,\n    sort,\n    id,\n    currentPage: getCurrentPage(),\n    pageSize,\n    loadDataCount: existsDataSource() ? 1 : 0\n  })\n\n  const queryFn = async (\n    _name: string,\n    currentPage: number,\n    pageSize: number,\n    filter?: string,\n    sort?: string[],\n    id?: ID,\n    originFilter?: any,\n    originSort?: any,\n    originGlobalFilter?: any\n  ): Promise<void> => {\n    let result: Page<T>\n    if (id) {\n      const value = await service.findOne(id)\n      if (value){\n        result = DefaultPage.createFromValues([value],1,0,0,0);\n      } else {\n        result = DefaultPage.createFromValues([],0,0,0,0);\n      }\n    } else if (findAllWithFilterAndSort && filter && sort && sort.length > 0) {\n      result = await findAllWithFilterAndSort(filter, currentPage, pageSize, sort)\n    } else if (findAllWithFilter && filter) {\n      result = await findAllWithFilter(filter, currentPage, pageSize)\n    } else if (findAllWithSort && sort && sort.length > 0) {\n      result = await findAllWithSort(currentPage, pageSize, sort)\n    } else if (findAll) {\n      result = await findAll(currentPage, pageSize)\n    } else if (filter && sort && sort.length > 0) {\n      result = await service.findAllWithFilterAndSort(filter, currentPage, pageSize, sort)\n    } else if (filter) {\n      result = await service.findAllWithFilter(filter, currentPage, pageSize)\n    } else if (sort && sort.length > 0) {\n      result = await service.findAllWithSort(currentPage, pageSize, sort)\n    } else {\n      result = await service.findAll(currentPage, pageSize)\n    }\n\n    if (filterData) {\n      result = filterData(result)\n    }\n\n    if (transformData) {\n      result = transformData(result)\n    }\n\n    setInternalState((prev) => {\n      const dsOptions: DataSourceOptions<T> = {\n        records: result.content,\n        grandTotalRecords: result.totalElements,\n        totalPages: result.totalPages,\n        currentPage: result.pageable.pageNumber,\n        pageSize,\n        filter,\n        sort,\n        originFilter,\n        originGlobalFilter,\n        originSort,\n        validator\n      }\n      if (prev.dataSource.isActive()) {\n        prev.dataSource.setData(dsOptions)\n      } else {\n        prev.dataSource.open(dsOptions)\n      }\n      return {\n        ...prev,\n        currentPage,\n        pageSize,\n        filter,\n        sort,\n        id,\n        isLoading: false,\n        isError: false,\n        error: '',\n        loadDataCount: prev.loadDataCount + 1\n      }\n    })\n    if (store) {\n      store.setValue(name, internalState.dataSource)\n    }\n    if (onLoadComplete) {\n      onLoadComplete(internalState.dataSource)\n    }\n  }\n\n  /**\n   * Registrando listeners\n   * @param dataSource\n   */\n  const handleDataSourceEventListener = (event: DataSourceEvent<T>): void => {\n    if (event.type === DataSourceEventNames.refreshData) {\n      const options = (event as DataSourceEventRefreshDataType<T>).options\n      try {\n        setInternalState((prev) => {\n          return {\n            ...prev,\n            isLoading: true,\n            filter: options.filter,\n            sort: options.sort,\n            currentPage: options.currentPage\n          }\n        })\n        queryFn(\n          internalState.name,\n          options.currentPage,\n          options.pageSize,\n          options.filter,\n          options.sort,\n          internalState.id,\n          options.originFilter,\n          options.originSort,\n          options.originGlobalFilter\n        ).catch((err) => {\n          const userError = processErrorMessage(err)\n          setInternalState((prev) => ({\n            ...prev,\n            isError: true,\n            isLoading: false,\n            error: userError\n          }))\n          if (props.onError) {\n            props.onError(userError, err)\n          }\n        })\n      } catch (error) {\n        const userError = processErrorMessage(error)\n        setInternalState((prev) => ({\n          ...prev,\n          isError: true,\n          isLoading: false,\n          error: userError\n        }))\n        if (props.onError) {\n          props.onError(userError, error)\n        }\n      }\n    }\n  }\n\n  const registerListeners = (dataSource: ArchbaseDataSource<T, string>) => {\n    dataSource.addListener(handleDataSourceEventListener)\n  }\n  /**\n   * Removendo listeners\n   * @param dataSource\n   */\n  const unRegisterListeners = (dataSource: ArchbaseDataSource<T, string>) => {\n    dataSource.removeListener(handleDataSourceEventListener)\n  }\n\n  useEffect(() => {\n    try {\n      registerListeners(internalState.dataSource)\n      if (loadOnStart && internalState.loadDataCount === 0) {\n        setInternalState((prev) => {\n          return { ...prev, isLoading: true }\n        })\n        queryFn(\n          internalState.name,\n          currentPage,\n          pageSize,\n          internalState.filter,\n          internalState.sort,\n          internalState.id\n        ).catch((err) => {\n          const userError = processErrorMessage(err)\n          setInternalState((prev) => ({\n            ...prev,\n            isError: true,\n            isLoading: false,\n            error: userError\n          }))\n          if (props.onError) {\n            props.onError(userError, err)\n          }\n        })\n      }\n      return () => {\n        if (onDestroy) {\n          unRegisterListeners(internalState.dataSource)\n          onDestroy(internalState.dataSource)\n        }\n      }\n    } catch (error) {\n      const userError = processErrorMessage(error)\n      setInternalState((prev) => ({\n        ...prev,\n        isError: true,\n        isLoading: false,\n        error: userError\n      }))\n      if (props.onError) {\n        props.onError(userError, error)\n      }\n    }\n  }, [\n    internalState.name,\n    internalState.sort,\n    internalState.filter,\n    internalState.id,\n    internalState.currentPage,\n    internalState.pageSize\n  ])\n\n  const clearError = () => {\n    setInternalState((prev) => ({\n      ...prev,\n      isError: false,\n      isLoading: false,\n      error: ''\n    }))\n  }\n\n  return {\n    isLoading: internalState.isLoading,\n    isError: internalState.isError,\n    error: internalState.error,\n    dataSource: internalState.dataSource,\n    clearError\n  }\n}\n"],"names":["Operator","is","type","obj","clas","isOperator","operator","ExpressionType","FilterException","message","FieldExpression","fieldName","fieldSql","sb","FilterExpression","value","AndExpression","OperationExpression","OrExpression","valueStart","valueEnd","lhsValue","rhsValue","newOperator","newRhsValue","InExpression","BetweenExpression","GroupExpression","expressions","lastIndex","lastClause","appendDelimiter","i","field","ArchbaseFilterDSL","operation","query","sort","condition","rules","addWhere","rule","CONDITION","newValue","newValue2","name","nameSql","values","columnOrExpression","desc","ArchbaseRemoteDataSource","ArchbaseDataSource","service","options","label","callback","msg","i18next","ArchbaseDataSourceError","DataSourceEventNames","errors","index","item","idx","error","element","userError","processErrorMessage","deletedRecord","deletedIndex","filter","page","_callback","QUICK","NORMAL","ADVANCED","currentFilter","filterStr","result","useArchbaseRemoteDataSource","props","transformData","onLoadComplete","onDestroy","filterData","findAll","findAllWithSort","findAllWithFilter","findAllWithFilterAndSort","initialDataSource","pageSize","currentPage","loadOnStart","store","id","validator","existsDataSource","buildDataSource","getCurrentPage","internalState","setInternalState","useState","queryFn","_name","originFilter","originSort","originGlobalFilter","DefaultPage","prev","dsOptions","handleDataSourceEventListener","event","err","registerListeners","dataSource","unRegisterListeners","useEffect","clearError"],"mappings":"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"}