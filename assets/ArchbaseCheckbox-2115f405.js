import{j as w}from"./jsx-runtime-29545a09.js";import{r as n}from"./index-76fb7be0.js";import{b as U,d as B,c as H}from"./useArchbaseDataSource-0bdc03a6.js";import{u as z}from"./use-force-update-df6d2b99.js";import{D as l}from"./useArchbaseDataSourceListener-cbed610e.js";import{C as M}from"./Checkbox-14e2beba.js";function v({dataSource:a,dataField:r,disabled:V=!1,readOnly:d=!1,required:k=!1,style:q,trueValue:i=!0,falseValue:c=!1,isChecked:x=!1,width:C,label:g,description:R,error:A,size:D,radius:F,onFocusExit:f=()=>{},onFocusEnter:m=()=>{},onChangeValue:p=()=>{},innerRef:O}){const[s,h]=n.useState(x),I=n.useRef(),[_,b]=n.useState(A),L=z();n.useEffect(()=>{b(void 0)},[s]);const t=()=>{let e=s;if(a&&r){const o=a.getFieldValue(r);o!=null&&(e=o===i)}h(e)},y=n.useCallback(()=>{t()},[]),E=n.useCallback(e=>{a&&r&&((e.type===l.dataChanged||e.type===l.recordChanged||e.type===l.afterScroll||e.type===l.afterCancel||e.type===l.afterEdit)&&(t(),L()),e.type===l.onFieldError&&e.fieldName===r&&b(e.error))},[]);U(()=>{t(),a&&r&&(a.addListener(E),a.addFieldChangeListener(r,y))}),B(()=>{a&&r&&(a.removeListener(E),a.removeFieldChangeListener(r,y))}),H(()=>{t()},[]);const N=e=>{const o=e.target.checked,u=o?i:c;h(o),a&&!a.isBrowsing()&&r&&a.getFieldValue(r)!==u&&a.setFieldValue(r,u),p&&p(u,e)},T=e=>{f&&f(e)},j=e=>{m&&m(e)};return w(M,{disabled:V,readOnly:(()=>{let e=d;return a&&!d&&(e=a.isBrowsing()),e})(),required:k,style:{...q,width:C},checked:s,ref:O||I,value:s?i:c,onChange:N,onBlur:T,onFocus:j,description:R,label:g,labelPosition:"right",size:D,radius:F,error:_})}try{v.displayName="ArchbaseCheckbox",v.__docgenInfo={description:"",displayName:"ArchbaseCheckbox",props:{dataSource:{defaultValue:null,description:"Fonte de dados onde será atribuido o valor do checkbox",name:"dataSource",required:!1,type:{name:"ArchbaseDataSource<T, ID>"}},dataField:{defaultValue:null,description:"Campo onde deverá ser atribuido o valor do checkbox na fonte de dados",name:"dataField",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Indicador se o checkbox está desabilitado",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:{value:"false"},description:"Indicador se o checkbox é somente leitura. Obs: usado em conjunto com o status da fonte de dados",name:"readOnly",required:!1,type:{name:"boolean"}},required:{defaultValue:{value:"false"},description:"Indicador se o preenchimento do checkbox é obrigatório",name:"required",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"Estilo do checkbox",name:"style",required:!1,type:{name:"CSSProperties"}},radius:{defaultValue:null,description:"Chave de theme.radius ou qualquer valor CSS válido para definir border-radius, theme.defaultRadius por padrão",name:"radius",required:!1,type:{name:"string | number"}},trueValue:{defaultValue:{value:"true"},description:"Valor quando o checkbox estiver true",name:"trueValue",required:!1,type:{name:"any"}},falseValue:{defaultValue:{value:"false"},description:"Valor quando o checkbox estiver false",name:"falseValue",required:!1,type:{name:"any"}},isChecked:{defaultValue:{value:"false"},description:"Indicador se o checkbox está marcado",name:"isChecked",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"Título do checkbox",name:"label",required:!1,type:{name:"ReactNode"}},width:{defaultValue:null,description:"Largura do checkbox",name:"width",required:!1,type:{name:"string | number"}},description:{defaultValue:null,description:"Descrição do checkbox",name:"description",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"Último erro ocorrido no checkbox",name:"error",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"Valor de tamanho predefinido",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'}]}},onFocusExit:{defaultValue:{value:"() => {}"},description:"Evento quando o foco sai do checkbox",name:"onFocusExit",required:!1,type:{name:"FocusEventHandler<T>"}},onFocusEnter:{defaultValue:{value:"() => {}"},description:"Evento quando o checkbox recebe o foco",name:"onFocusEnter",required:!1,type:{name:"FocusEventHandler<T>"}},onChangeValue:{defaultValue:{value:"() => {}"},description:"Evento quando o valor do checkbox é alterado",name:"onChangeValue",required:!1,type:{name:"(value: any, event: any) => void"}},innerRef:{defaultValue:null,description:"Referência para o componente interno",name:"innerRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}}}}}catch{}export{v as A};
