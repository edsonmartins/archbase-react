{"version":3,"file":"ArchbaseMasonry-ba81dd37.js","sources":["../../src/components/masonry/ArchbaseMasonry.tsx"],"sourcesContent":["import React, { ReactNode, useCallback, useEffect, useMemo, useState } from 'react'\n\nconst DEFAULT_COLUMNS_COUNT = 1\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useEffect : useEffect\n\nconst useHasMounted = () => {\n  const [hasMounted, setHasMounted] = useState(false)\n  useIsomorphicLayoutEffect(() => {\n    setHasMounted(true)\n  }, [])\n  return hasMounted\n}\n\nconst useWindowWidth = () => {\n  const hasMounted = useHasMounted()\n  const [width, setWidth] = useState(0)\n\n  const handleResize = useCallback(() => {\n    if (!hasMounted) return\n    setWidth(window.innerWidth)\n  }, [hasMounted])\n\n  useIsomorphicLayoutEffect(() => {\n    if (hasMounted) {\n      window.addEventListener('resize', handleResize)\n      handleResize()\n      return () => window.removeEventListener('resize', handleResize)\n    }\n  }, [hasMounted, handleResize])\n\n  return width\n}\n\nexport interface ArchbaseMasonryCustomItemProps<T, _ID> {\n  /** Chave */\n  key: string\n  /** Id do item */\n  id: any\n  /** Indicador se o Item está ativo */\n  active: boolean\n  /** Indice dentro da lista */\n  index: number\n  /** Registro contendo dados de uma linha na lista */\n  recordData: T\n  /** Indicador se item da lista está desabilitado */\n  disabled: boolean\n\n}\n\nexport interface ArchbaseMasonryProps {\n  children: ReactNode | ReactNode[]\n  columnsCount?: number\n  gutter?: string\n  className?: string | null\n  style?: React.CSSProperties\n}\n\nexport const ArchbaseMasonry: React.FC<ArchbaseMasonryProps> = ({\n  children,\n  columnsCount = 3,\n  gutter = 'px',\n  className = null,\n  style = {}\n}) => {\n  const getColumns = (): ReactNode[][] => {\n    const columns: ReactNode[][] = Array.from({ length: columnsCount }, () => [])\n    React.Children.forEach(children, (child, index) => {\n      if (React.isValidElement(child)) {\n        columns[index % columnsCount].push(child)\n      }\n    })\n    return columns\n  }\n\n  const renderColumns = (): JSX.Element[] => {\n    return getColumns().map((column, i) => (\n      <div\n        key={i}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'flex-start',\n          alignContent: 'stretch',\n          flex: 1,\n          width: 0,\n          gap: gutter\n        }}\n      >\n        {column.map((item, index) => (\n          <React.Fragment key={index}>{item}</React.Fragment>\n        ))}\n      </div>\n    ))\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignContent: 'stretch',\n        boxSizing: 'border-box',\n        width: '100%',\n        gap: gutter,\n        ...style\n      }}\n      className={className!}\n    >\n      {renderColumns()}\n    </div>\n  )\n}\n\ninterface ArchbaseMasonryResponsiveProps {\n  columnsCountBreakPoints?: Record<number, number>\n  children: React.ReactNode | React.ReactNode[]\n  className?: string | null\n  style?: React.CSSProperties | null\n}\n\nexport const ArchbaseMasonryResponsive: React.FC<ArchbaseMasonryResponsiveProps> = ({\n  columnsCountBreakPoints = {\n    350: 1,\n    750: 2,\n    900: 3,\n    1200: 4\n  },\n  children,\n  className = null,\n  style = null\n}) => {\n  const windowWidth = useWindowWidth()\n  const columnsCount = useMemo(() => {\n    const breakPoints = Object.keys(columnsCountBreakPoints).sort((a, b) => Number(a) - Number(b))\n    let count =\n      breakPoints.length > 0 ? columnsCountBreakPoints[breakPoints[0]] : DEFAULT_COLUMNS_COUNT\n\n    breakPoints.forEach((breakPoint) => {\n      if (Number(breakPoint) < windowWidth) {\n        count = columnsCountBreakPoints[breakPoint]\n      }\n    })\n\n    return count\n  }, [windowWidth, columnsCountBreakPoints])\n\n  return (\n    <div className={className!} style={style!}>\n      {React.Children.map(children, (child, index) =>\n        React.cloneElement(child as React.ReactElement, {\n          key: index,\n          columnsCount: columnsCount\n        })\n      )}\n    </div>\n  )\n}\n"],"names":["DEFAULT_COLUMNS_COUNT","useIsomorphicLayoutEffect","useEffect","useHasMounted","hasMounted","setHasMounted","useState","useWindowWidth","width","setWidth","handleResize","useCallback","ArchbaseMasonry","children","columnsCount","gutter","className","style","getColumns","columns","React","child","index","renderColumns","column","i","jsx","item","ArchbaseMasonryResponsive","columnsCountBreakPoints","windowWidth","useMemo","breakPoints","a","b","count","breakPoint"],"mappings":"6FAEA,MAAAA,EAAA,EAEAC,EAAA,OAAA,OAAA,IAAAC,EAAAA,UAAAA,EAAAA,UAEAC,EAAA,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,OAAAL,EAAA,IAAA,CACEI,EAAA,EAAA,CAAkB,EAAA,CAAA,CAAA,EAEpBD,CACF,EAEAG,EAAA,IAAA,CACE,MAAAH,EAAAD,IACA,CAAAK,EAAAC,CAAA,EAAAH,EAAA,SAAA,CAAA,EAEAI,EAAAC,EAAAA,YAAA,IAAA,CACEP,GACAK,EAAA,OAAA,UAAA,CAA0B,EAAA,CAAAL,CAAA,CAAA,EAG5B,OAAAH,EAAA,IAAA,CACE,GAAAG,EACE,cAAA,iBAAA,SAAAM,CAAA,EACAA,IACA,IAAA,OAAA,oBAAA,SAAAA,CAAA,CACF,EAAA,CAAAN,EAAAM,CAAA,CAAA,EAGFF,CACF,EA0BOI,EAAA,CAAA,CAAyD,SAAAC,EAC9D,aAAAC,EAAA,EACe,OAAAC,EAAA,KACN,UAAAC,EAAA,KACG,MAAAC,EAAA,CAAA,CAEd,IAAA,CACE,MAAAC,EAAA,IAAA,CACE,MAAAC,EAAA,MAAA,KAAA,CAAA,OAAAL,CAAA,EAAA,IAAA,CAAA,CAAA,EACAM,OAAAA,EAAA,SAAA,QAAAP,EAAA,CAAAQ,EAAAC,IAAA,CACEF,EAAA,eAAAC,CAAA,GACEF,EAAAG,EAAAR,CAAA,EAAA,KAAAO,CAAA,CACF,CAAA,EAEFF,CAAO,EAGTI,EAAA,IACEL,EAAA,EAAA,IAAA,CAAAM,EAAAC,IAAAC,EACE,MAAC,CAAA,MAAA,CAEQ,QAAA,OACI,cAAA,SACM,eAAA,aACC,aAAA,UACF,KAAA,EACR,MAAA,EACC,IAAAX,CACF,EACP,SAAAS,EAAA,IAAA,CAAAG,EAAAL,IAAAI,EAAAN,EAAA,SAAA,CAAA,SAAAO,CAAA,EAAAL,CAAA,CAAA,CAIC,EAAAG,CAbI,CAAA,EAkBX,OAAAC,EACE,MAAC,CAAA,MAAA,CACQ,QAAA,OACI,cAAA,MACM,eAAA,SACC,aAAA,UACF,UAAA,aACH,MAAA,OACJ,IAAAX,EACF,GAAAE,CACF,EACL,UAAAD,EACA,SAAAO,EAAA,CAEe,CAAA,CAGrB,EASOK,EAAA,CAAA,CAA6E,wBAAAC,EAAA,CACxD,IAAA,EACnB,IAAA,EACA,IAAA,EACA,KAAA,CACC,EACR,SAAAhB,EACA,UAAAG,EAAA,KACY,MAAAC,EAAA,IAEd,IAAA,CACE,MAAAa,EAAAvB,IACAO,EAAAiB,EAAAA,QAAA,IAAA,CACE,MAAAC,EAAA,OAAA,KAAAH,CAAA,EAAA,KAAA,CAAAI,EAAAC,IAAA,OAAAD,CAAA,EAAA,OAAAC,CAAA,CAAA,EACA,IAAAC,EAAAH,EAAA,OAAA,EAAAH,EAAAG,EAAA,CAAA,CAAA,EAAAhC,EAGA,OAAAgC,EAAA,QAAAI,GAAA,CACE,OAAAA,CAAA,EAAAN,IACEK,EAAAN,EAAAO,CAAA,EACF,CAAA,EAGFD,CAAO,EAAA,CAAAL,EAAAD,CAAA,CAAA,EAGT,OAAAH,EAAA,MAAA,CAAA,UAAAV,EAAA,MAAAC,EAAA,SAAAG,EAAA,SAAA,IAEoBP,EAAI,CAAAQ,EAAAC,IAAAF,EAAA,aAAAC,EAAA,CAC8B,IAAAC,EACzC,aAAAR,CACL,CAAA,CACD,CAAA,CAAA,CAIT;;;;;"}