{"version":3,"file":"ArchbaseDebugInspector-f24b3ce4.js","sources":["../../src/components/debug/objectinspector/ArchbaseDebugInspector.tsx"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport { ArchbaseFloatingWindow } from '@components/containers'\nimport { Accordion, Flex } from '@mantine/core'\nimport { useHotkeys } from '@mantine/hooks'\nimport useComponentSize from '@rehooks/component-size'\n\nimport { ArchbaseObjectInspector } from './ArchbaseObjectInspector'\n\nexport interface ArchbaseDebugInspectorProps {\n  /** Título a ser exibido */\n  title?: string\n  /** Título a ser exibido*/\n  icon?: string | HTMLImageElement\n  /** Comando para abrir e fechar o Object Inspector */\n  debugObjectInspectorHotKey?: string\n  /** Lista de objetos a serem inspecionados */\n  objectsToInspect?: ArchbaseObjectToInspect[]\n  /** Indica se o Object Inspector será visível inicialmente ou não */\n  visible?: boolean\n  /** Altura inicial do Object Inspector */\n  height?: number\n  /** Largura inicial do Object Inspector */\n  width?: number\n}\n\nexport interface ArchbaseObjectToInspect {\n  /**Nome do objeto a ser inspecionado*/\n  name: string\n  /**Objeto a ser inspecionado*/\n  object: Object\n}\n\nexport function ArchbaseDebugInspector({\n  title,\n  icon,\n  debugObjectInspectorHotKey,\n  objectsToInspect,\n  visible = false,\n  height = 400,\n  width = 500,\n}: ArchbaseDebugInspectorProps) {\n  const [open, setOpen] = useState<boolean>(visible)\n  useHotkeys([[debugObjectInspectorHotKey, () => setOpen(!open)]])\n  const innerComponentRef = useRef<any>()\n  const contentSize = useComponentSize(innerComponentRef)\n\n  const display = open ? {} : { display: 'none' }\n\n  return (\n    <div style={display}>\n      <ArchbaseFloatingWindow\n        id=\"debug-rules\"\n        height={height}\n        width={width}\n        resizable={true}\n        style={{ opacity: 1 }}\n        titleBar={{\n          icon,\n          title,\n          buttons: { minimize: true, maximize: true },\n        }}\n        innerRef={innerComponentRef}\n      >\n        <Flex h={contentSize.height}>\n          <Accordion w=\"100%\">\n            {objectsToInspect.map((item, index) => (\n              <Accordion.Item key={index} value={item.name}>\n                <Accordion.Control>{item.name}</Accordion.Control>\n                <Accordion.Panel>\n                  <ArchbaseObjectInspector data={item.object} />\n                </Accordion.Panel>\n              </Accordion.Item>\n            ))}\n          </Accordion>\n        </Flex>\n      </ArchbaseFloatingWindow>\n    </div>\n  )\n}\n"],"names":["ArchbaseDebugInspector","title","icon","debugObjectInspectorHotKey","objectsToInspect","visible","height","width","open","setOpen","useState","useHotkeys","innerComponentRef","useRef","contentSize","useComponentSize","jsx","ArchbaseFloatingWindow","Flex","Accordion","item","index","jsxs","ArchbaseObjectInspector"],"mappings":"2UAgCO,SAAAA,EAAA,CAAgC,MAAAC,EACrC,KAAAC,EACA,2BAAAC,EACA,iBAAAC,EACA,QAAAC,EAAA,GACU,OAAAC,EAAA,IACD,MAAAC,EAAA,GAEX,EAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAL,CAAA,EACAM,EAAA,CAAA,CAAAR,EAAA,IAAAM,EAAA,CAAAD,CAAA,CAAA,CAAA,CAAA,EACA,MAAAI,EAAAC,EAAAA,SACAC,EAAAC,EAAAH,CAAA,EAIA,OAAAI,EAAA,MAAA,CAAA,MAFAR,EAAA,CAAA,EAAA,CAAA,QAAA,MAAA,EAEA,SAAAQ,EAEIC,EAAC,CAAA,GAAA,cACI,OAAAX,EACH,MAAAC,EACA,UAAA,GACW,MAAA,CAAA,QAAA,CAAA,EACS,SAAA,CACV,KAAAL,EACR,MAAAD,EACA,QAAA,CAAA,SAAA,GAAA,SAAA,EAAA,CAC0C,EAC5C,SAAAW,EACU,SAAAI,EAAAE,EAAA,CAAA,EAAAJ,EAAA,OAAA,SAAAE,EAAAG,EAAA,CAAA,EAAA,OAAA,SAAAf,EAAA,IAAA,CAAAgB,EAAAC,IAAAC,EAAAH,EAAA,KAAA,CAAA,MAAAC,EAAA,KAAA,SAAA,CAMFJ,EAAAG,EAAA,QAAA,CAAA,SAAAC,EAAA,KAAA,EAA8BJ,EAAAG,EAAA,MAAA,CAAA,SAAAH,EAAAO,EAAA,CAAA,KAAAH,EAAA,MAAA,CAAA,CAAA,CAAA,CAG9B,CAAA,EAAAC,CAAA,CAAA,CAAA,CAAA,EAAA,CAIR,CAAA,CAAA,CAAA,CAIR"}