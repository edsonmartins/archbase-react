import{j as a,a as c}from"./jsx-runtime-c9381026.js";import{a as ee}from"./types-5decf4ed.js";import{b as re,c as ae,u as k,a as B}from"./useArchbaseDataSource-c5d317be.js";import{D as u,u as T}from"./useArchbaseDataSourceListener-92dd263c.js";import"./index-9e992aa6.js";import{l as E}from"./lodash-4d0be66a.js";import{r as p,R as te}from"./index-8b3efc3f.js";import{I as ie}from"./Input-d93c779c.js";import{C as D}from"./Chip-204a4d75.js";import{F as oe}from"./Flex-edc9651b.js";import{p as ne}from"./pedidosData-e328d4f3.js";import{G as m}from"./Grid-522477ba.js";import{C as l}from"./Card-58b02503.js";import{G as b}from"./Group-28f303e3.js";import{T as V}from"./Text-f1dc7ab8.js";import{S as le}from"./ScrollArea-556e0f32.js";import{A as _}from"./ArchbaseObjectInspector-e280f051.js";import{p as se}from"./produtosData-5e5104e3.js";import"./i18next-a4b2730f.js";import"./index-1905cc86.js";import"./index-d0400ba7.js";import"./_commonjsHelpers-de833af9.js";import"./polymorphic-factory-36f51e7a.js";import"./Mantine.context-e727d900.js";import"./create-optional-context-86e78b6c.js";import"./use-resolved-styles-api-f52582d3.js";import"./UnstyledButton-b0502f12.js";import"./use-id-f896cdc5.js";import"./use-isomorphic-effect-aa890e3d.js";import"./CheckIcon-0b04162a.js";import"./use-uncontrolled-f56237fb.js";import"./create-safe-context-941c9e18.js";import"./get-sorted-breakpoints-e9679440.js";import"./px-90b8b31c.js";import"./Paper-fe8e8b68.js";import"./use-merged-ref-a374cf59.js";import"./DirectionProvider-1e219af7.js";import"./use-mantine-color-scheme-dd296b2f.js";import"./noop-1bad6ac0.js";import"./use-media-query-91643880.js";function ue(r,e,t,n){return!r&&!e?[]:e?te.Children.toArray(e).map(o=>({label:o.props.label,value:o.props.value.toString(),key:E.uniqueId("chip")})):Array.isArray(r)?r.map(o=>({label:t(o),value:n(o),key:E.uniqueId("chip")})):Object.keys(r).map(o=>({label:o,value:r[o].toString(),key:E.uniqueId("chip")}))}function f({dataSource:r,dataField:e,onSelectValue:t=()=>{},getOptionLabel:n=s=>s.label,getOptionValue:o=s=>s.value,convertToValue:q=s=>s.toString(),convertFromValue:w,value:A,defaultValue:R,initialOptions:U=[],children:M,variant:W,type:z,multiple:C=!1,error:H,style:J,label:K,description:Q}){const[s,be]=p.useState(ue(U,M,n,o)),[h,F]=p.useState(A),[X,x]=p.useState(H);p.useEffect(()=>{x(void 0)},[h]);const g=()=>{let i=A;r&&e&&(i=C?r.getFieldValue(e).map(d=>q(d)):q(r.getFieldValue(e)),i||(i=C?[]:"")),F(i)},Y=p.useCallback(()=>{g()},[]),Z=p.useCallback(i=>{if(r&&e){switch(i.type){case(u.dataChanged,u.recordChanged,u.afterScroll,u.afterCancel):{g();break}}i.type===u.onFieldError&&i.fieldName===e&&x(i.error)}},[]);re(()=>{g(),r&&e&&(r.addListener(Z),r.addFieldChangeListener(e,Y))}),ae(()=>{g()},[]);const $=i=>{F(Ve=>i);let d=i;w&&(d=w(i)),r&&!r.isBrowsing()&&e&&r.getFieldValue(e)!==d&&r.setFieldValue(e,d),t&&t(d)};return a(ie.Wrapper,{label:K,error:X,description:Q,children:a(D.Group,{defaultValue:h?o(h):R,value:h,onChange:$,multiple:C,children:a(oe,{gap:"md",justify:"center",align:"center",direction:"column",wrap:"wrap",children:s.map(i=>a(D,{style:J,value:i.value,variant:W,type:z,children:i.label},i.key))})})})}try{f.displayName="ArchbaseChipGroup",f.__docgenInfo={description:"",displayName:"ArchbaseChipGroup",props:{dataSource:{defaultValue:null,description:"Fonte de dados onde será atribuido o valor do ChipGroup",name:"dataSource",required:!1,type:{name:"ArchbaseDataSource<T, ID>"}},dataField:{defaultValue:null,description:"Campo onde deverá ser atribuido o valor do ChipGroup na fonte de dados",name:"dataField",required:!1,type:{name:"string"}},onSelectValue:{defaultValue:{value:"() => {}"},description:"Evento quando um valor é selecionado",name:"onSelectValue",required:!1,type:{name:"(value: any) => void"}},getOptionLabel:{defaultValue:{value:"(o: any) => o.label"},description:"Function que retorna o label de uma ChipItem",name:"getOptionLabel",required:!1,type:{name:"(option: O) => string"}},getOptionValue:{defaultValue:{value:"(o: any) => o.value"},description:"Function que retorna o valor de uma ChipItem",name:"getOptionValue",required:!1,type:{name:"(option: O) => any"}},convertToValue:{defaultValue:{value:"(value) => value.toString()"},description:"Function que converte os valores do datasource para uma lista de chips selecionados do tipo padrão string[] ou string",name:"convertToValue",required:!1,type:{name:"(source: any) => string | string[]"}},convertFromValue:{defaultValue:null,description:"Function que converte o valor selecionado do tipo padrão string[] ou string para o tipo desejado",name:"convertFromValue",required:!1,type:{name:"(selected: string | string[]) => any"}},initialOptions:{defaultValue:{value:"[]"},description:"Opções de seleção iniciais",name:"initialOptions",required:!1,type:{name:"object | O[]"}},children:{defaultValue:null,description:"Coleção de ChipItem[] que representam as opções do select",name:"children",required:!1,type:{name:"ReactNode | ReactNode[]"}},value:{defaultValue:null,description:"Valor de entrada controlado",name:"value",required:!1,type:{name:"any"}},defaultValue:{defaultValue:null,description:"Valor padrão de entrada não controlado",name:"defaultValue",required:!1,type:{name:"any"}},variant:{defaultValue:null,description:'Controla a aparência do chip, sendo padrão "filled" para dark theme e "outline" para light theme. ("outline" | "light" | "filled")',name:"variant",required:!1,type:{name:"enum",value:[{value:'"light"'},{value:'"filled"'},{value:'"outline"'}]}},type:{defaultValue:null,description:"Tipo do chip",name:"type",required:!1,type:{name:"enum",value:[{value:'"checkbox"'},{value:'"radio"'}]}},multiple:{defaultValue:{value:"false"},description:"Permite que múltiplos valores sejam selecionados",name:"multiple",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"Estilo do chip",name:"style",required:!1,type:{name:"CSSProperties"}},error:{defaultValue:null,description:"Último erro ocorrido no chip",name:"error",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Título do edit",name:"label",required:!1,type:{name:"string"}},description:{defaultValue:null,description:"Descrição do edit",name:"description",required:!1,type:{name:"string"}}}}}catch{}const L=[ne[0]],N=se,de=r=>r===null?[]:N.filter(e=>r.includes(e.id.toString())).map(e=>({produto:e,quantidade:1,total:e.preco})),pe=r=>r.produto.id,ce=r=>r.id,me=r=>r.descricao,fe=(r,e)=>{const t=e.reduce((n,o)=>n+o.total,0);r==null||r.setFieldValue("vlTotal",t)},he=()=>{const r=k(),{dataSource:e}=B({initialData:L,name:"dsPedidos"});return e!=null&&e.isBrowsing()&&!(e!=null&&e.isEmpty())&&e.edit(),T({dataSource:e,listener:t=>{switch(t.type){case u.fieldChanged:{r();break}}}}),c(m,{children:[a(m.Col,{offset:1,span:4,children:c(l,{shadow:"sm",padding:"lg",radius:"md",withBorder:!0,children:[a(l.Section,{withBorder:!0,inheritPadding:!0,py:"xs",children:a(b,{justify:"space-between",children:a(V,{fw:500,children:"Chip Group Edit"})})}),a(f,{initialOptions:N,dataSource:e,dataField:"itens",convertFromValue:de,getOptionLabel:me,getOptionValue:ce,convertToValue:pe,onSelectValue:()=>fe(e,e==null?void 0:e.getFieldValue("itens")),multiple:!0})]})}),a(m.Col,{span:4,children:c(l,{shadow:"sm",padding:"lg",radius:"md",withBorder:!0,children:[a(l.Section,{withBorder:!0,inheritPadding:!0,py:"xs",children:a(b,{justify:"space-between",children:a(V,{fw:500,children:"DataSource dsPessoas"})})}),a(le,{style:{height:500},children:a(_,{data:e})})]})})]})},ge=(r,e=!1)=>{const t=Object.keys(r).map(n=>({label:r[n],value:n}));return e?t.slice(t.length/2):t.slice(0,t.length/2)},ye=ge(ee),ve=()=>{const r=k(),{dataSource:e}=B({initialData:L,name:"dsPedidos"});return e!=null&&e.isBrowsing()&&!(e!=null&&e.isEmpty())&&e.edit(),T({dataSource:e,listener:t=>{switch(t.type){case u.fieldChanged:{r();break}}}}),c(m,{children:[a(m.Col,{offset:1,span:4,children:c(l,{shadow:"sm",padding:"lg",radius:"md",withBorder:!0,children:[a(l.Section,{withBorder:!0,inheritPadding:!0,py:"xs",children:a(b,{justify:"space-between",children:a(V,{fw:500,children:"Chip Group Edit (multiple = false)"})})}),a(f,{initialOptions:ye,dataSource:e,dataField:"status",convertFromValue:t=>Number(t),multiple:!1})]})}),a(m.Col,{span:4,children:c(l,{shadow:"sm",padding:"lg",radius:"md",withBorder:!0,children:[a(l.Section,{withBorder:!0,inheritPadding:!0,py:"xs",children:a(b,{justify:"space-between",children:a(V,{fw:500,children:"DataSource dsPessoas"})})}),a(_,{data:e})]})})]})},lr={title:"Editores/Chip Group",component:f},y={name:"Exemplo simples",render:()=>a(he,{})},v={name:"Com um único valor selecionado",render:()=>a(ve,{})};var G,P,O;y.parameters={...y.parameters,docs:{...(G=y.parameters)==null?void 0:G.docs,source:{originalSource:`{
  name: 'Exemplo simples',
  render: () => <ArchbaseChipGroupExample />
}`,...(O=(P=y.parameters)==null?void 0:P.docs)==null?void 0:O.source}}};var j,I,S;v.parameters={...v.parameters,docs:{...(j=v.parameters)==null?void 0:j.docs,source:{originalSource:`{
  name: 'Com um único valor selecionado',
  render: () => <ArchbaseChipGroupSingleExample />
}`,...(S=(I=v.parameters)==null?void 0:I.docs)==null?void 0:S.source}}};export{v as GroupSingle,y as Primary,lr as default};
