{"version":3,"file":"ArchbaseFormTemplate.story-4d3fe75b.js","sources":["../../src/components/template/ArchbaseFormTemplate.tsx"],"sourcesContent":["import { Button, Group, LoadingOverlay, MantineNumberSize, Paper, ScrollArea, Space, Stack, Variants } from '@mantine/core'\nimport React, { useRef, useState } from 'react'\nimport { t } from 'i18next'\nimport { IconBug, IconDeviceFloppy } from '@tabler/icons-react'\nimport { ArchbaseAlert } from '../notification'\nimport { ArchbaseDataSource, DataSourceEvent, DataSourceEventNames } from '../datasource'\nimport { useArchbaseAppContext } from '../core'\nimport { useArchbaseDataSourceListener } from '../hooks'\nimport { IconX } from '@tabler/icons-react'\nimport { processErrorMessage } from '../core/exceptions'\n\nexport interface ArchbaseFormTemplateProps<T, ID> {\n  title: string\n  dataSource: ArchbaseDataSource<T,ID>\n  variant?: Variants<'filled' | 'outline' | 'light' | 'white' | 'default' | 'subtle' | 'gradient'>;\n  /** ReferÃªncia para o componente interno */\n  innerRef?: React.RefObject<HTMLInputElement> | undefined\n  isLoading?: boolean\n  isCanceling?: boolean\n  isSaving?: boolean\n  isError?: boolean\n  error?: string | undefined\n  clearError?: () => void\n  autoCloseAlertError?: number\n  width?: number | string | undefined\n  height?: number | string | undefined\n  withBorder?: boolean\n  children?: React.ReactNode | React.ReactNode[]\n  radius?: MantineNumberSize\n  onSave?: (entityToSave) => void\n  onCancel?: () => void\n  onBeforeSave?: (entityToSave : T) => void\n  onAfterSave?: (savedEntity : T)=>void\n  onBeforeCancel?: ()=>void\n  onAfterCancel?: ()=>void;\n  onError?: (error: string)=>void;\n}\n\nexport function ArchbaseFormTemplate<T extends object, ID>({\n  innerRef,\n  isError = false,\n  isCanceling = false,\n  isSaving = false,\n  error = '',\n  clearError = () => {},\n  autoCloseAlertError = 15000,\n  width = '100%',\n  height = '100%',\n  withBorder = true,\n  children,\n  radius,\n  variant,\n  dataSource,\n  onSave,\n  onCancel,\n  onBeforeSave,\n  onAfterSave,\n  onBeforeCancel,\n  onAfterCancel,\n  onError\n}: ArchbaseFormTemplateProps<T, ID>) {\n  const appContext = useArchbaseAppContext();\n  const innerComponentRef = innerRef || useRef<any>()\n  const [isInternalError, setIsInternalError] = useState<boolean>(isError)\n  const [internalError, setInternalError] = useState<string>(error);\n\n  useArchbaseDataSourceListener<T, ID>({\n    dataSource,\n    listener: (event: DataSourceEvent<T>): void => {\n      if (event.type === DataSourceEventNames.onError) {\n        setIsInternalError(true);\n        setInternalError(event.error);\n      }\n    }\n  })\n\n  const handleSave = async (entity) =>{\n    try {\n      if (onSave){\n          onSave(entity);\n      } else {\n        onBeforeSave && onBeforeSave(entity)\n        if (!dataSource.isBrowsing()){\n          dataSource.save().then(()=>{\n            onAfterSave && onAfterSave(entity)\n          }).catch((e)=>{\n            onError && onError(processErrorMessage(e))\n            setIsInternalError(true)\n            setInternalError(processErrorMessage(e))\n          })\n        }        \n      }\n    } catch (e){\n      onError && onError(processErrorMessage(e))\n      setIsInternalError(true)\n      setInternalError(processErrorMessage(e))\n    }\n  }\n\n  const handleCancel = () => {    \n    try {\n      if (onCancel){\n        onCancel()\n      } else {\n        onBeforeCancel && onBeforeCancel()\n        if (!dataSource.isBrowsing()){\n          dataSource.cancel()\n        }\n        onAfterCancel && onAfterCancel()\n      }\n    } catch (e){\n      onError && onError(processErrorMessage(e))\n      setIsInternalError(true)\n      setInternalError(processErrorMessage(e))\n    }\n  }\n\n  const handleCloseAlert = () => {\n    clearError && clearError()\n    setIsInternalError(false)\n    setInternalError(\"\")\n  }\n\n  return (\n    <Paper\n      ref={innerComponentRef}\n      withBorder={withBorder}\n      radius={radius}\n      style={{ width: width, height: height, padding: 20 }}\n    >\n      {isInternalError ? (\n        <ArchbaseAlert\n          autoClose={autoCloseAlertError}\n          withCloseButton={true}\n          withBorder={true}\n          icon={<IconBug size=\"1.4rem\" />}\n          title={t('WARNING')}\n          titleColor=\"rgb(250, 82, 82)\"\n          variant={variant??appContext.variant}\n          onClose={handleCloseAlert}\n        >\n          <span>{internalError}</span>\n        </ArchbaseAlert>\n      ) : null}\n      <ScrollArea h={`calc(100% - ${isError?'80px':'0px'})`}>\n        <LoadingOverlay visible={isCanceling || isSaving} overlayOpacity={0.3} />\n        {children}  \n        <Stack>\n          <Space h=\"lg\" />\n          {dataSource && !dataSource.isBrowsing()?<Group spacing=\"md\">\n              <Button\n                leftIcon={<IconDeviceFloppy />}\n                onClick={()=>handleSave(dataSource.getCurrentRecord())}\n                disabled={dataSource && dataSource.isBrowsing()}\n                variant={variant ?? appContext.variant}\n                color=\"green\"\n              >{`${t('Ok')}`}</Button>\n              <Button\n                leftIcon={<IconX />}\n                onClick={handleCancel}\n                disabled={dataSource && dataSource.isBrowsing()}\n                variant={variant ?? appContext.variant}\n                color=\"red\"\n              >{`${t('Cancel')}`}</Button>\n            </Group>:<Group spacing=\"md\">\n              <Button\n                leftIcon={<IconX />}\n                onClick={handleCancel}\n                variant={variant ?? appContext.variant}\n              >{`${t('Close')}`}</Button>\n            </Group>}\n        </Stack>\n      </ScrollArea>\n    </Paper>\n  )\n}\n"],"names":["ArchbaseFormTemplate","innerRef","isError","isCanceling","isSaving","error","clearError","autoCloseAlertError","width","height","withBorder","children","radius","variant","dataSource","onSave","onCancel","onBeforeSave","onAfterSave","onBeforeCancel","onAfterCancel","onError","appContext","useArchbaseAppContext","innerComponentRef","useRef","isInternalError","setIsInternalError","useState","internalError","setInternalError","useArchbaseDataSourceListener","event","DataSourceEventNames","handleSave","entity","e","processErrorMessage","handleCancel","handleCloseAlert","jsxs","Paper","jsx","ArchbaseAlert","IconBug","t","ScrollArea","LoadingOverlay","Stack","Space","Group","Button","IconDeviceFloppy","IconX"],"mappings":"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"}