import{j as a,a as o,F as t}from"./jsx-runtime-2ca98591.js";import{M as n}from"./index-d741c9ee.js";import"./ArchbaseGlobalFilter-aa9cced9.js";import"./ArchbaseRemoteApiService-751ad5a8.js";import"./index-402471b7.js";import{u as s}from"./index-ef048a71.js";import"./iframe-2fc76aba.js";import"../sb-preview/runtime.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-20a9f65a.js";import"./pickBy-5061995a.js";import"./_commonjsHelpers-de833af9.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./mapValues-19ef60e3.js";import"./index-29301433.js";import"./index-7f92349d.js";import"./extends-98964cd2.js";import"./index-356e4a49.js";import"./index-c0071dc9.js";import"./ArchbaseAdvancedTabs-2e888216.js";import"./index-9d475cdf.js";import"./ArchbaseFloatingWindow-5a72a221.js";import"./use-isomorphic-effect-d441b347.js";import"./Box-603b1b1a.js";import"./MantineProvider-c53063b6.js";import"./Button-86c3033b.js";import"./createReactComponent-b82b540a.js";import"./Text-6036efe5.js";import"./useArchbasePassiveLayoutEffect-8e758e5c.js";import"./Paper-165ce658.js";import"./use-window-event-f88e3fb7.js";import"./Grid-10ef5cfd.js";import"./Group-d6868f5c.js";import"./___vite-browser-external_commonjs-proxy-19bb288c.js";function i(r){const e=Object.assign({h1:"h1",p:"p",strong:"strong",h2:"h2"},s(),r.components);return o(t,{children:[a(n,{title:"Fontes de dados/Introdução"}),`
`,a(e.h1,{id:"introdução-ao-datasource",children:"Introdução ao DataSource"}),`
`,o(e.p,{children:["O ",a(e.strong,{children:"DataSource"})," é uma funcionalidade fundamental no núcleo da nossa biblioteca React, desempenhando um papel crucial na gestão de dados e interações dentro de uma aplicação. O DataSource é uma abstração poderosa que permite aos desenvolvedores controlar e gerenciar conjuntos de dados de forma eficiente e dinâmica."]}),`
`,o(e.p,{children:["Nossa implementação do ",a(e.strong,{children:"DataSource"})," oferece uma ampla gama de recursos, desde a manipulação de registros individuais até o controle de eventos e validação de dados. Ele é projetado para ser altamente flexível e personalizável, tornando-o adequado para uma variedade de casos de uso."]}),`
`,o(e.p,{children:["O ",a(e.strong,{children:"DataSource"})," oferece suporte a uma variedade de eventos que permitem aos desenvolvedores reagir a mudanças nos dados, como adição, remoção ou edição de registros. Além disso, ele facilita a validação de dados por meio de um sistema de validação integrado."]}),`
`,a(e.h2,{id:"extensões-do-datasource",children:"Extensões do DataSource"}),`
`,o(e.p,{children:["Além do DataSource básico, nossa biblioteca oferece implementações especializadas, como o ",a(e.strong,{children:"DataSource Remote"}),". Esta extensão permite a integração com APIs de serviços para buscar e salvar dados remotamente. O DataSource Remote simplifica a comunicação com serviços externos, tornando a interação com APIs uma tarefa fácil e eficiente."]}),`
`,a(e.h2,{id:"componentes-visuais-e-bind-bidirecional",children:"Componentes Visuais e Bind Bidirecional"}),`
`,o(e.p,{children:["Nossos principais componentes visuais foram projetados para serem compatíveis com o ",a(e.strong,{children:"DataSource"})," e oferecem vinculação bidirecional automática. Isso significa que você pode associar nossas listas e tabelas diretamente ao ",a(e.strong,{children:"DataSource"})," para criar interfaces de usuário dinâmicas e reativas."]}),`
`,o(e.p,{children:["Os componentes visuais da biblioteca facilitam a exibição e a edição de dados do ",a(e.strong,{children:"DataSource"})," em interfaces de usuário elegantes e interativas. Combinados com as extensões do ",a(e.strong,{children:"DataSource"}),", como o ",a(e.strong,{children:"DataSource Remote"}),", você pode criar aplicativos React que se comunicam de forma eficiente com serviços externos e apresentam dados de maneira amigável para o usuário."]}),`
`,a("img",{src:"/datasource_bind.png"}),`
`,a(e.h2,{id:"gerenciamento-de-hierarquias-de-dados-com-datasource",children:"Gerenciamento de Hierarquias de Dados com DataSource"}),`
`,o(e.p,{children:["O ",a(e.strong,{children:"DataSource"})," é uma ferramenta poderosa para o gerenciamento de hierarquias de dados complexas. Quando seus objetos de dados formam uma árvore ou uma hierarquia com listas filhas, é possível criar DataSources para cada coleção principal e suas coleções filhas associadas. Isso permite que você mantenha a integridade dos dados e atualizações consistentes em toda a estrutura complexa do objeto."]}),`
`,a(e.p,{children:"Neste tópico, exploraremos como lidar com esses cenários complexos, onde objetos podem conter listas de objetos filhos aninhados. Mostraremos como criar e gerenciar DataSources para essas listas filhas, permitindo que você mantenha a integridade dos dados e atualizações consistentes em toda a estrutura complexa do objeto."}),`
`,o(e.p,{children:["Se você está procurando uma maneira eficiente e poderosa de gerenciar hierarquias de dados em suas aplicações React, o ",a(e.strong,{children:"DataSource"})," é a ferramenta que você precisa conhecer. Vamos mergulhar fundo nesta funcionalidade essencial e descobrir como ela pode tornar o desenvolvimento de aplicações mais eficiente e produtivo."]}),`
`,o(e.p,{children:["Continue lendo para explorar todas as nuances do ",a(e.strong,{children:"DataSource"})," e aproveitar ao máximo essa poderosa ferramenta em nossa biblioteca React."]}),`
`,a("img",{src:"/datasource_hierarquia.png"})]})}function G(r={}){const{wrapper:e}=Object.assign({},s(),r.components);return e?a(e,Object.assign({},r,{children:a(i,r)})):i(r)}export{G as default};
//# sourceMappingURL=intro-0697d5a7.js.map
