{"version":3,"file":"ArchbaseMasonryTemplate.story-835b757e.js","sources":["../../node_modules/@mantine/core/esm/RingProgress/Curve/get-curve-props.js","../../node_modules/@mantine/core/esm/RingProgress/Curve/Curve.js","../../node_modules/@mantine/core/esm/RingProgress/get-curves/get-curves.js","../../node_modules/@mantine/core/esm/RingProgress/RingProgress.styles.js","../../node_modules/@mantine/core/esm/RingProgress/RingProgress.js","../../node_modules/@tabler/icons-react/dist/esm/icons/IconArrowDownRight.js","../../node_modules/@tabler/icons-react/dist/esm/icons/IconArrowForwardUp.js","../../src/components/masonry/ArchbaseMasonry.context.ts","../../src/components/template/ArchbaseMasonryTemplate.tsx"],"sourcesContent":["function getCurveProps({ size, thickness, sum, value, root, offset }) {\n  const radius = (size * 0.9 - thickness * 2) / 2;\n  const deg = Math.PI * radius * 2 / 100;\n  const strokeDasharray = root ? `${(100 - sum) * deg}, ${sum * deg}` : `${value * deg}, ${(100 - value) * deg}`;\n  return {\n    strokeWidth: thickness,\n    cx: size / 2,\n    cy: size / 2,\n    r: radius,\n    transform: root ? `scale(1, -1) translate(0, -${size})` : null,\n    strokeDasharray,\n    strokeDashoffset: root ? 0 : offset\n  };\n}\n\nexport { getCurveProps };\n//# sourceMappingURL=get-curve-props.js.map\n","import React from 'react';\nimport { useMantineTheme } from '@mantine/styles';\nimport { getCurveProps } from './get-curve-props.js';\nimport { Tooltip } from '../../Tooltip/Tooltip.js';\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nfunction Curve(_a) {\n  var _b = _a, {\n    size,\n    value,\n    offset,\n    sum,\n    thickness,\n    root,\n    color,\n    lineRoundCaps,\n    tooltip\n  } = _b, others = __objRest(_b, [\n    \"size\",\n    \"value\",\n    \"offset\",\n    \"sum\",\n    \"thickness\",\n    \"root\",\n    \"color\",\n    \"lineRoundCaps\",\n    \"tooltip\"\n  ]);\n  const theme = useMantineTheme();\n  const stroke = theme.fn.themeColor(color || (theme.colorScheme === \"dark\" ? \"dark\" : \"gray\"), color ? theme.fn.primaryShade() : theme.colorScheme === \"dark\" ? 4 : 1, false);\n  return /* @__PURE__ */ React.createElement(Tooltip.Floating, {\n    disabled: !tooltip,\n    label: tooltip\n  }, /* @__PURE__ */ React.createElement(\"circle\", __spreadValues(__spreadProps(__spreadValues({}, others), {\n    fill: \"none\",\n    strokeLinecap: lineRoundCaps ? \"round\" : \"butt\",\n    stroke\n  }), getCurveProps({ sum, size, thickness, value, offset, root }))));\n}\nCurve.displayName = \"@mantine/core/Curve\";\n\nexport { Curve };\n//# sourceMappingURL=Curve.js.map\n","var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction getCurves({\n  size,\n  thickness,\n  sections,\n  renderRoundedLineCaps,\n  rootColor\n}) {\n  const sum = sections.reduce((acc, current) => acc + current.value, 0);\n  const accumulated = Math.PI * ((size * 0.9 - thickness * 2) / 2) * 2;\n  let offset = accumulated;\n  const curves = [];\n  const curvesInOrder = [];\n  for (let i = 0; i < sections.length; i += 1) {\n    curves.push({ sum, offset, data: sections[i], root: false });\n    offset -= sections[i].value / 100 * accumulated;\n  }\n  curves.push({ sum, offset, data: { color: rootColor }, root: true });\n  curvesInOrder.push(__spreadProps(__spreadValues({}, curves[curves.length - 1]), { lineRoundCaps: false }));\n  if (curves.length > 2) {\n    curvesInOrder.push(__spreadProps(__spreadValues({}, curves[0]), { lineRoundCaps: renderRoundedLineCaps }));\n    curvesInOrder.push(__spreadProps(__spreadValues({}, curves[curves.length - 2]), { lineRoundCaps: renderRoundedLineCaps }));\n    for (let i = 1; i <= curves.length - 3; i += 1) {\n      curvesInOrder.push(__spreadProps(__spreadValues({}, curves[i]), { lineRoundCaps: false }));\n    }\n  } else {\n    curvesInOrder.push(__spreadProps(__spreadValues({}, curves[0]), { lineRoundCaps: renderRoundedLineCaps }));\n  }\n  return curvesInOrder;\n}\n\nexport { getCurves };\n//# sourceMappingURL=get-curves.js.map\n","import { createStyles } from '@mantine/styles';\n\nvar useStyles = createStyles({\n  root: {\n    position: \"relative\"\n  },\n  label: {\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  }\n});\n\nexport default useStyles;\n//# sourceMappingURL=RingProgress.styles.js.map\n","import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { Curve } from './Curve/Curve.js';\nimport { getCurves } from './get-curves/get-curves.js';\nimport useStyles from './RingProgress.styles.js';\nimport { Box } from '../Box/Box.js';\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nconst defaultProps = {\n  size: 120,\n  thickness: 12\n};\nconst RingProgress = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"RingProgress\", defaultProps, props), {\n    className,\n    style,\n    label,\n    sections,\n    size,\n    thickness,\n    classNames,\n    styles,\n    roundCaps,\n    rootColor,\n    unstyled,\n    variant\n  } = _a, others = __objRest(_a, [\n    \"className\",\n    \"style\",\n    \"label\",\n    \"sections\",\n    \"size\",\n    \"thickness\",\n    \"classNames\",\n    \"styles\",\n    \"roundCaps\",\n    \"rootColor\",\n    \"unstyled\",\n    \"variant\"\n  ]);\n  const { classes, cx } = useStyles(null, {\n    name: \"RingProgress\",\n    classNames,\n    styles,\n    unstyled,\n    variant\n  });\n  const curves = getCurves({\n    size,\n    thickness,\n    sections,\n    renderRoundedLineCaps: roundCaps,\n    rootColor\n  }).map(({ data, sum, root, lineRoundCaps, offset }, index) => /* @__PURE__ */ React.createElement(Curve, __spreadProps(__spreadValues({}, data), {\n    key: index,\n    size,\n    thickness,\n    sum,\n    offset,\n    color: data == null ? void 0 : data.color,\n    root,\n    lineRoundCaps\n  })));\n  return /* @__PURE__ */ React.createElement(Box, __spreadValues({\n    style: __spreadValues({ width: size, height: size }, style),\n    className: cx(classes.root, className),\n    ref\n  }, others), /* @__PURE__ */ React.createElement(\"svg\", {\n    style: { width: size, height: size, transform: \"rotate(-90deg)\" }\n  }, curves), label && /* @__PURE__ */ React.createElement(\"div\", {\n    className: classes.label,\n    style: { right: thickness * 2, left: thickness * 2 }\n  }, label));\n});\nRingProgress.displayName = \"@mantine/core/RingProgress\";\n\nexport { RingProgress };\n//# sourceMappingURL=RingProgress.js.map\n","/**\n * @tabler/icons-react v2.38.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconArrowDownRight = createReactComponent(\"arrow-down-right\", \"IconArrowDownRight\", [\n  [\"path\", { d: \"M7 7l10 10\", key: \"svg-0\" }],\n  [\"path\", { d: \"M17 8l0 9l-9 0\", key: \"svg-1\" }]\n]);\n\nexport { IconArrowDownRight as default };\n//# sourceMappingURL=IconArrowDownRight.js.map\n","/**\n * @tabler/icons-react v2.38.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconArrowForwardUp = createReactComponent(\"arrow-forward-up\", \"IconArrowForwardUp\", [\n  [\"path\", { d: \"M15 14l4 -4l-4 -4\", key: \"svg-0\" }],\n  [\"path\", { d: \"M19 10h-11a4 4 0 1 0 0 8h1\", key: \"svg-1\" }]\n]);\n\nexport { IconArrowForwardUp as default };\n//# sourceMappingURL=IconArrowForwardUp.js.map\n","import { ArchbaseDataSource } from '@components/datasource';\nimport React from 'react';\n\nexport interface ArchbaseMasonryContextValue<T, ID> {\n  /** Fonte de dados do masonry */\n  dataSource?: ArchbaseDataSource<T, ID>;\n  /** Function para notificar o masonry que o item foi selecionado */\n  handleSelectItem?: (index: number, data: T) => void;\n  /** Id do masonry pai */\n  ownerId?: any;\n  /** Cor de fundo do item ativo definido globalmente no masonry */\n  activeBackgroundColor?: string;\n  /** Cor da fonte do item ativo definido globalmente no masonry */\n  activeColor?: string;\n  /** Evento gerado quando o mouse está sobre um item */\n  onItemEnter?: (event: React.MouseEvent, data: any) => void;\n  /** Evento gerado quando o mouse sai de um item */\n  onItemLeave?: (event: React.MouseEvent, data: any) => void;\n}\nconst ArchbaseMasonryContext = React.createContext<ArchbaseMasonryContextValue<any, any>>({});\nexport const ArchbaseMasonryProvider = ArchbaseMasonryContext.Provider;\nexport default ArchbaseMasonryContext;\n","import { MantineNumberSize, Pagination, Variants } from '@mantine/core';\nimport useComponentSize from '@rehooks/component-size';\nimport { IconEdit, IconEye, IconPlus, IconTrash } from '@tabler/icons-react';\nimport { t } from 'i18next';\nimport { uniqueId } from 'lodash';\nimport React, { CSSProperties, Fragment, ReactNode, useMemo, useRef, useState, Profiler } from 'react';\nimport { ComponentDefinition, useArchbaseAppContext } from '../core';\nimport type { ArchbaseDataSource } from '../datasource';\nimport { ArchbaseMasonry, ArchbaseMasonryProvider, ArchbaseMasonryResponsive } from '../masonry';\nimport {\n  ArchbaseQueryBuilder,\n  ArchbaseQueryFilter,\n  ArchbaseQueryFilterDelegator,\n  ArchbaseQueryFilterState,\n  FilterOptions,\n  getFields,\n} from '../querybuilder';\nimport { ArchbaseSpaceTemplate, ArchbaseSpaceTemplateOptions } from './ArchbaseSpaceTemplate';\nimport { ArchbaseAction, ArchbaseActionButtons, ArchbaseActionButtonsOptions } from '../buttons';\nimport { ArchbaseGlobalFilter, Field } from '../querybuilder';\nimport { ArchbaseDebugOptions } from './ArchbaseTemplateCommonTypes';\n\nexport interface UserActionsOptions {\n  visible?: boolean;\n  labelAdd?: string | undefined | null;\n  labelEdit?: string | undefined | null;\n  labelRemove?: string | undefined | null;\n  labelView?: string | undefined | null;\n  allowAdd?: boolean;\n  allowEdit?: boolean;\n  allowView?: boolean;\n  allowRemove?: boolean;\n  onAddExecute?: () => void;\n  onEditExecute?: () => void;\n  onRemoveExecute?: () => void;\n  onViewExecute?: () => void;\n  customUserActions?: ArchbaseAction[];\n  positionCustomUserActions?: 'before' | 'after';\n}\n\nconst defaultUserActions: UserActionsOptions = {\n  visible: true,\n  allowAdd: true,\n  allowEdit: true,\n  allowView: true,\n  allowRemove: true,\n  positionCustomUserActions: 'after',\n};\n\nexport interface UserRowActionsOptions<T> {\n  actions?: any;\n  onAddRow?: (row: T) => void;\n  onEditRow?: (row: T) => void;\n  onRemoveRow?: (row: T) => void;\n  onViewRow?: (row: T) => void;\n}\n\nexport interface ArchbaseMasonryTemplateProps<T, ID> {\n  title: string;\n  dataSource: ArchbaseDataSource<T, ID>;\n  dataSourceEdition?: ArchbaseDataSource<T, ID> | undefined;\n  onlyGlobalFilter?: boolean;\n  globalFilterFieldNames?: string[];\n  filterOptions: FilterOptions;\n  pageSize?: number;\n  filterFields: ReactNode | undefined;\n  filterPersistenceDelegator: ArchbaseQueryFilterDelegator;\n  userActions?: UserActionsOptions;\n  variant?: Variants<'filled' | 'outline' | 'light' | 'white' | 'default' | 'subtle' | 'gradient'>;\n  /** Referência para o componente interno */\n  innerRef?: React.RefObject<HTMLInputElement> | undefined;\n  isLoading?: boolean;\n  debug?: boolean;\n  isError?: boolean;\n  error?: string | undefined;\n  clearError?: () => void;\n  width?: number | string | undefined;\n  height?: number | string | undefined;\n  withBorder?: boolean;\n  withPagination?: boolean;\n  radius?: MantineNumberSize;\n  columnsCountBreakPoints?: Record<number, number>;\n  columnsCount?: number;\n  gutter?: string;\n  /** Definições do componente customizado a ser renderizado para um Item da lista */\n  component?: ComponentDefinition;\n  id?: string;\n  activeIndex?: number;\n  /** Cor de fundo do item ativo */\n  activeBackgroundColor?: string;\n  /** Cor do item ativo */\n  activeColor?: string;\n  /** Evento gerado quando o mouse está sobre um item */\n  onItemEnter?: (event: React.MouseEvent, data: any) => void;\n  /** Evento gerado quando o mouse sai de um item */\n  onItemLeave?: (event: React.MouseEvent, data: any) => void;\n  style?: CSSProperties;\n  actionsButtonsOptions?: ArchbaseActionButtonsOptions;\n  spaceOptions?: ArchbaseSpaceTemplateOptions;\n  debugOptions?: ArchbaseDebugOptions;\n}\n\nfunction onRenderCallback(\n  id, // ID exclusivo da medição\n  phase, // 'mount' (montagem) ou 'update' (atualização)\n  actualDuration, // Tempo em milissegundos gasto na renderização\n  baseDuration, // Tempo em milissegundos estimado para renderização sem memoização\n  startTime, // Timestamp quando a renderização começou\n  commitTime, // Timestamp quando a renderização foi confirmada\n  interactions // Conjunto de interações do usuário relacionadas a esta renderização\n) {\n  console.log(`Render de \"${id}\" na fase \"${phase}\": ${actualDuration}ms`);\n}\n\nexport function ArchbaseMasonryTemplate<T extends object, ID>({\n  title,\n  dataSource,\n  //  dataSourceEdition,\n  filterOptions,\n  globalFilterFieldNames,\n  //pageSize,\n  filterFields,\n  innerRef,\n  //isLoading = false,\n  debug = false,\n  onlyGlobalFilter = true,\n  isError = false,\n  error = '',\n  clearError = () => {},\n  width = '100%',\n  height = '100%',\n  withBorder = true,\n  filterPersistenceDelegator,\n  withPagination = true,\n  radius,\n  userActions,\n  columnsCountBreakPoints,\n  columnsCount,\n  gutter,\n  component,\n  activeIndex,\n  activeBackgroundColor,\n  activeColor,\n  onItemEnter,\n  onItemLeave,\n  style,\n  actionsButtonsOptions,\n  spaceOptions,\n  variant,\n  id = uniqueId('masonry'),\n  debugOptions,\n}: ArchbaseMasonryTemplateProps<T, ID>) {\n  const appContext = useArchbaseAppContext();\n  const [idMasonry] = useState(id);\n  const innerComponentRef = innerRef || useRef<any>();\n  const filterRef = useRef<any>();\n  const [activePage, setPage] = useState(dataSource.getCurrentPage());\n  const [activeIndexValue, setActiveIndexValue] = useState(\n    activeIndex ? activeIndex : dataSource && dataSource.getTotalRecords() > 0 ? 0 : -1,\n  );\n  let size = useComponentSize(innerComponentRef);\n  const [filterState, setFilterState] = useState<ArchbaseQueryFilterState>({\n    activeFilterIndex: -1,\n    expandedFilter: false,\n  });\n\n  const userActionsBuilded: ArchbaseAction[] = useMemo(() => {\n    const userActionsEnd = { ...defaultUserActions, ...userActions };\n    const defaultActions: ArchbaseAction[] = [];\n    if (userActionsEnd.allowAdd) {\n      defaultActions.push({\n        id: 'actAdd',\n        icon: <IconPlus />,\n        color: 'green',\n        label: userActionsEnd.labelAdd ? userActionsEnd.labelAdd : t('archbase:New'),\n        executeAction: () => {\n          if (userActionsEnd && userActionsEnd.onAddExecute) {\n            userActionsEnd.onAddExecute();\n          }\n        },\n        enabled: true,\n        hint: `${t('archbase:Clique para criar um novo registro')}`,\n      });\n    }\n    if (userActionsEnd.allowEdit) {\n      defaultActions.push({\n        id: 'actEdit',\n        icon: <IconEdit />,\n        color: 'blue',\n        label: userActionsEnd.labelEdit ? userActionsEnd.labelEdit : t('archbase:Edit'),\n        executeAction: () => {\n          if (userActionsEnd && userActionsEnd.onEditExecute) {\n            userActionsEnd.onEditExecute();\n          }\n        },\n        enabled: !dataSource.isEmpty() && dataSource.isBrowsing(),\n        hint: `${t('archbase:Clique para editar o registro')}`,\n      });\n    }\n    if (userActionsEnd.allowRemove) {\n      defaultActions.push({\n        id: 'actRemove',\n        icon: <IconTrash />,\n        color: 'red',\n        label: userActionsEnd.labelRemove ? userActionsEnd.labelRemove : t('archbase:Remove'),\n        executeAction: () => {\n          if (userActionsEnd && userActionsEnd.onRemoveExecute) {\n            userActionsEnd.onRemoveExecute();\n          }\n        },\n        enabled: !dataSource.isEmpty() && dataSource.isBrowsing(),\n        hint: `${t('archbase:Clique para remover o registro')}`,\n      });\n    }\n\n    if (userActionsEnd.allowView) {\n      defaultActions.push({\n        id: 'actView',\n        icon: <IconEye />,\n        label: userActionsEnd.labelView ? userActionsEnd.labelView : t('archbase:View'),\n        executeAction: () => {\n          if (userActionsEnd && userActionsEnd.onViewExecute) {\n            userActionsEnd.onViewExecute();\n          }\n        },\n        enabled: !dataSource.isEmpty() && dataSource.isBrowsing(),\n        hint: `${t('archbase:Clique para visualizar o registro')}`,\n      });\n    }\n\n    if (userActionsEnd.customUserActions && userActionsEnd.positionCustomUserActions === 'before') {\n      return [...userActionsEnd.customUserActions, ...defaultActions];\n    }\n\n    if (userActionsEnd.customUserActions && userActionsEnd.positionCustomUserActions === 'after') {\n      return [...defaultActions, ...userActionsEnd.customUserActions];\n    }\n\n    return defaultActions;\n  }, [userActions, dataSource]);\n\n  const cards: ReactNode[] = useMemo(() => {\n    if (component) {\n      let DynamicComponent = component.type;\n      let compProps = {};\n      if (component.props) {\n        compProps = component.props;\n      }\n\n      return dataSource.browseRecords().map((record: any, index: number) => {\n        const newKey = `${idMasonry}_${index}`;\n        const newId = `${idMasonry}_${index}`;\n        let active = record.active === undefined ? false : record.active;\n        if (activeIndexValue >= 0) {\n          active = false;\n          if (activeIndexValue === index) {\n            active = true;\n          }\n        }\n\n        return (\n          <DynamicComponent\n            key={newKey}\n            id={newId}\n            active={active}\n            index={index}\n            dataSource={dataSource}\n            recordData={record}\n            disabled={record.disabled}\n            {...compProps}\n          />\n        );\n      });\n    }\n\n    return [];\n  }, [activeIndexValue, component, idMasonry, dataSource]);\n\n  const handleFilterChanged = (filter: ArchbaseQueryFilter, activeFilterIndex: number) => {\n    setFilterState({ ...filterState, currentFilter: filter, activeFilterIndex });\n  };\n\n  const handleToggleExpandedFilter = (expanded: boolean) => {\n    setFilterState({ ...filterState, expandedFilter: expanded });\n  };\n\n  const handleSelectedFilter = (filter: ArchbaseQueryFilter, activeFilterIndex: number) => {\n    setFilterState({ ...filterState, currentFilter: filter, activeFilterIndex });\n  };\n\n  const handleSearchByFilter = () => {};\n\n  const handleSelectItem = (index: number, data: T) => {\n    setActiveIndexValue(index);\n    if (dataSource) {\n      dataSource.gotoRecordByData(data);\n    }\n  };\n\n  const handleGlobalFilter = (buildedQuery: string) => {\n    if (dataSource) {\n      const options = dataSource.getOptions();\n      options.filter = buildedQuery;\n      options.currentPage = activePage;\n      dataSource.refreshData(options);\n    }\n  };\n\n  const handlePageChange = (page: number) => {\n    if (dataSource) {\n      const options = dataSource.getOptions();\n      options.currentPage = page;\n      dataSource.refreshData(options);\n    }\n  };\n\n  const buildFilter = (): ReactNode => {\n    if (onlyGlobalFilter && globalFilterFieldNames) {\n      return (\n        <ArchbaseGlobalFilter\n          searchableFields={globalFilterFieldNames}\n          onFilter={handleGlobalFilter}\n          minFilterValueLength={1}\n        />\n      );\n    }\n\n    return (\n      <Profiler id={`profile_${filterOptions.componentName}`} onRender={onRenderCallback}>\n      <ArchbaseQueryBuilder\n        id={filterOptions.componentName}\n        viewName={filterOptions.viewName}\n        apiVersion={filterOptions.apiVersion}\n        ref={filterRef}\n        variant={variant ?? appContext.variant}\n        expandedFilter={filterState.expandedFilter}\n        persistenceDelegator={filterPersistenceDelegator}\n        currentFilter={filterState.currentFilter}\n        activeFilterIndex={filterState.activeFilterIndex}\n        onSelectedFilter={handleSelectedFilter}\n        onFilterChanged={handleFilterChanged}\n        onSearchByFilter={handleSearchByFilter}\n        onToggleExpandedFilter={handleToggleExpandedFilter}\n        width={'660px'}\n        height=\"170px\"\n      >\n        {filterFields}\n      </ArchbaseQueryBuilder>\n      </Profiler>\n    );\n  };\n\n  const defaultActionsButtonsOptions: ArchbaseActionButtonsOptions = {\n    menuButtonColor: 'blue.5',\n    menuPosition: 'left',\n  };\n\n  const defaultSpaceTemplateOptions: ArchbaseSpaceTemplateOptions = {\n    headerFlexGrow: 'left',\n    footerGridColumns: {},\n  };\n\n  const _actionsButtonsOptions = { ...defaultActionsButtonsOptions, ...actionsButtonsOptions };\n  const _spaceTemplateOptions = { ...defaultSpaceTemplateOptions, ...spaceOptions };\n\n  return (\n    <ArchbaseSpaceTemplate\n      innerRef={innerComponentRef}\n      width={width}\n      height={height}\n      radius={radius}\n      withBorder={withBorder}\n      isError={isError}\n      error={error}\n      clearError={clearError}\n      title={title}\n      defaultDebug={debug}\n      debugOptions={debugOptions}\n      style={style}\n      options={_spaceTemplateOptions}\n      headerLeft={<ArchbaseActionButtons actions={userActionsBuilded} options={_actionsButtonsOptions} />}\n      headerRight={buildFilter()}\n      footerRight={\n        withPagination ? <Pagination total={dataSource.getTotalPages()} onChange={handlePageChange} /> : undefined\n      }\n    >\n      <ArchbaseMasonryProvider\n        value={{\n          dataSource,\n          ownerId: id,\n          handleSelectItem,\n          activeBackgroundColor,\n          activeColor,\n          onItemEnter,\n          onItemLeave,\n        }}\n      >\n        <ArchbaseMasonryResponsive columnsCountBreakPoints={columnsCountBreakPoints}>\n          <ArchbaseMasonry gutter={gutter} columnsCount={columnsCount}>\n            {cards}\n          </ArchbaseMasonry>\n        </ArchbaseMasonryResponsive>\n      </ArchbaseMasonryProvider>\n    </ArchbaseSpaceTemplate>\n  );\n}\n"],"names":["getCurveProps","size","thickness","sum","value","root","offset","radius","deg","strokeDasharray","__defProp","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","obj","key","__spreadValues","a","b","prop","__spreadProps","__objRest","source","exclude","target","Curve","_a","_b","color","lineRoundCaps","tooltip","others","theme","useMantineTheme","stroke","React","Tooltip","getCurves","sections","renderRoundedLineCaps","rootColor","acc","current","accumulated","curves","curvesInOrder","i","useStyles","createStyles","useStyles$2","defaultProps","RingProgress","forwardRef","props","ref","useComponentDefaultProps","className","style","label","classNames","styles","roundCaps","unstyled","variant","classes","cx","data","index","Box","IconArrowDownRight","createReactComponent","IconArrowForwardUp","ArchbaseMasonryContext","ArchbaseMasonryProvider","defaultUserActions","onRenderCallback","id","phase","actualDuration","baseDuration","startTime","commitTime","interactions","ArchbaseMasonryTemplate","title","dataSource","filterOptions","globalFilterFieldNames","filterFields","innerRef","debug","onlyGlobalFilter","isError","error","clearError","width","height","withBorder","filterPersistenceDelegator","withPagination","userActions","columnsCountBreakPoints","columnsCount","gutter","component","activeIndex","activeBackgroundColor","activeColor","onItemEnter","onItemLeave","actionsButtonsOptions","spaceOptions","uniqueId","debugOptions","appContext","useArchbaseAppContext","idMasonry","useState","innerComponentRef","useRef","filterRef","activePage","setPage","activeIndexValue","setActiveIndexValue","useComponentSize","filterState","setFilterState","userActionsBuilded","useMemo","userActionsEnd","defaultActions","jsx","IconPlus","t","IconEdit","IconTrash","IconEye","cards","DynamicComponent","compProps","record","newKey","newId","active","handleFilterChanged","filter","activeFilterIndex","handleToggleExpandedFilter","expanded","handleSelectedFilter","handleSearchByFilter","handleSelectItem","handleGlobalFilter","buildedQuery","options","handlePageChange","page","buildFilter","ArchbaseGlobalFilter","Profiler","ArchbaseQueryBuilder","defaultActionsButtonsOptions","defaultSpaceTemplateOptions","_actionsButtonsOptions","_spaceTemplateOptions","ArchbaseSpaceTemplate","ArchbaseActionButtons","Pagination","ArchbaseMasonryResponsive","ArchbaseMasonry"],"mappings":"8jEAAA,SAASA,GAAc,CAAE,KAAAC,EAAM,UAAAC,EAAW,IAAAC,EAAK,MAAAC,EAAO,KAAAC,EAAM,OAAAC,GAAU,CACpE,MAAMC,GAAUN,EAAO,GAAMC,EAAY,GAAK,EACxCM,EAAM,KAAK,GAAKD,EAAS,EAAI,IAC7BE,EAAkBJ,EAAO,IAAI,IAAMF,GAAOK,CAAG,KAAKL,EAAMK,CAAG,GAAK,GAAGJ,EAAQI,CAAG,MAAM,IAAMJ,GAASI,CAAG,GAC5G,MAAO,CACL,YAAaN,EACb,GAAID,EAAO,EACX,GAAIA,EAAO,EACX,EAAGM,EACH,UAAWF,EAAO,8BAA8BJ,CAAI,IAAM,KAC1D,gBAAAQ,EACA,iBAAkBJ,EAAO,EAAIC,CACjC,CACA,CCRA,IAAII,GAAY,OAAO,eACnBC,GAAa,OAAO,iBACpBC,GAAoB,OAAO,0BAC3BC,EAAsB,OAAO,sBAC7BC,GAAe,OAAO,UAAU,eAChCC,GAAe,OAAO,UAAU,qBAChCC,GAAkB,CAACC,EAAKC,EAAKd,IAAUc,KAAOD,EAAMP,GAAUO,EAAKC,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAd,CAAO,CAAA,EAAIa,EAAIC,CAAG,EAAId,EACtJe,GAAiB,CAACC,EAAGC,IAAM,CAC7B,QAASC,KAAQD,IAAMA,EAAI,CAAA,GACrBP,GAAa,KAAKO,EAAGC,CAAI,GAC3BN,GAAgBI,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EACpC,GAAIT,EACF,QAASS,KAAQT,EAAoBQ,CAAC,EAChCN,GAAa,KAAKM,EAAGC,CAAI,GAC3BN,GAAgBI,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EAEtC,OAAOF,CACT,EACIG,GAAgB,CAACH,EAAGC,IAAMV,GAAWS,EAAGR,GAAkBS,CAAC,CAAC,EAC5DG,GAAY,CAACC,EAAQC,IAAY,CACnC,IAAIC,EAAS,CAAA,EACb,QAASL,KAAQG,EACXX,GAAa,KAAKW,EAAQH,CAAI,GAAKI,EAAQ,QAAQJ,CAAI,EAAI,IAC7DK,EAAOL,CAAI,EAAIG,EAAOH,CAAI,GAC9B,GAAIG,GAAU,MAAQZ,EACpB,QAASS,KAAQT,EAAoBY,CAAM,EACrCC,EAAQ,QAAQJ,CAAI,EAAI,GAAKP,GAAa,KAAKU,EAAQH,CAAI,IAC7DK,EAAOL,CAAI,EAAIG,EAAOH,CAAI,GAEhC,OAAOK,CACT,EACA,SAASC,GAAMC,EAAI,CACjB,IAAIC,EAAKD,EAAI,CACX,KAAA5B,EACA,MAAAG,EACA,OAAAE,EACA,IAAAH,EACA,UAAAD,EACA,KAAAG,EACA,MAAA0B,EACA,cAAAC,EACA,QAAAC,CACD,EAAGH,EAAII,EAASV,GAAUM,EAAI,CAC7B,OACA,QACA,SACA,MACA,YACA,OACA,QACA,gBACA,SACJ,CAAG,EACD,MAAMK,EAAQC,KACRC,EAASF,EAAM,GAAG,WAAWJ,IAAUI,EAAM,cAAgB,OAAS,OAAS,QAASJ,EAAQI,EAAM,GAAG,aAAY,EAAKA,EAAM,cAAgB,OAAS,EAAI,EAAG,EAAK,EAC3K,OAAuBG,EAAM,cAAcC,GAAQ,SAAU,CAC3D,SAAU,CAACN,EACX,MAAOA,CACX,EAAqBK,EAAM,cAAc,SAAUnB,GAAeI,GAAcJ,GAAe,GAAIe,CAAM,EAAG,CACxG,KAAM,OACN,cAAeF,EAAgB,QAAU,OACzC,OAAAK,CACD,CAAA,EAAGrC,GAAc,CAAE,IAAAG,EAAK,KAAAF,EAAM,UAAAC,EAAW,MAAAE,EAAO,OAAAE,EAAQ,KAAAD,EAAM,CAAC,CAAC,CAAC,CACpE,CACAuB,GAAM,YAAc,sBCrEpB,IAAIlB,GAAY,OAAO,eACnBC,GAAa,OAAO,iBACpBC,GAAoB,OAAO,0BAC3BC,GAAsB,OAAO,sBAC7BC,GAAe,OAAO,UAAU,eAChCC,GAAe,OAAO,UAAU,qBAChCC,GAAkB,CAACC,EAAKC,EAAKd,IAAUc,KAAOD,EAAMP,GAAUO,EAAKC,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAd,CAAO,CAAA,EAAIa,EAAIC,CAAG,EAAId,EACtJe,EAAiB,CAACC,EAAGC,IAAM,CAC7B,QAASC,KAAQD,IAAMA,EAAI,CAAA,GACrBP,GAAa,KAAKO,EAAGC,CAAI,GAC3BN,GAAgBI,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EACpC,GAAIT,GACF,QAASS,KAAQT,GAAoBQ,CAAC,EAChCN,GAAa,KAAKM,EAAGC,CAAI,GAC3BN,GAAgBI,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EAEtC,OAAOF,CACT,EACIG,EAAgB,CAACH,EAAGC,IAAMV,GAAWS,EAAGR,GAAkBS,CAAC,CAAC,EAChE,SAASmB,GAAU,CACjB,KAAAvC,EACA,UAAAC,EACA,SAAAuC,EACA,sBAAAC,EACA,UAAAC,CACF,EAAG,CACD,MAAMxC,EAAMsC,EAAS,OAAO,CAACG,EAAKC,IAAYD,EAAMC,EAAQ,MAAO,CAAC,EAC9DC,EAAc,KAAK,KAAO7C,EAAO,GAAMC,EAAY,GAAK,GAAK,EACnE,IAAII,EAASwC,EACb,MAAMC,EAAS,CAAA,EACTC,EAAgB,CAAA,EACtB,QAASC,EAAI,EAAGA,EAAIR,EAAS,OAAQQ,GAAK,EACxCF,EAAO,KAAK,CAAE,IAAA5C,EAAK,OAAAG,EAAQ,KAAMmC,EAASQ,CAAC,EAAG,KAAM,EAAO,CAAA,EAC3D3C,GAAUmC,EAASQ,CAAC,EAAE,MAAQ,IAAMH,EAItC,GAFAC,EAAO,KAAK,CAAE,IAAA5C,EAAK,OAAAG,EAAQ,KAAM,CAAE,MAAOqC,CAAW,EAAE,KAAM,EAAM,CAAA,EACnEK,EAAc,KAAKzB,EAAcJ,EAAe,CAAA,EAAI4B,EAAOA,EAAO,OAAS,CAAC,CAAC,EAAG,CAAE,cAAe,EAAK,CAAE,CAAC,EACrGA,EAAO,OAAS,EAAG,CACrBC,EAAc,KAAKzB,EAAcJ,EAAe,CAAA,EAAI4B,EAAO,CAAC,CAAC,EAAG,CAAE,cAAeL,CAAqB,CAAE,CAAC,EACzGM,EAAc,KAAKzB,EAAcJ,EAAe,CAAA,EAAI4B,EAAOA,EAAO,OAAS,CAAC,CAAC,EAAG,CAAE,cAAeL,CAAqB,CAAE,CAAC,EACzH,QAASO,EAAI,EAAGA,GAAKF,EAAO,OAAS,EAAGE,GAAK,EAC3CD,EAAc,KAAKzB,EAAcJ,EAAe,CAAA,EAAI4B,EAAOE,CAAC,CAAC,EAAG,CAAE,cAAe,EAAK,CAAE,CAAC,CAE/F,MACID,EAAc,KAAKzB,EAAcJ,EAAe,CAAA,EAAI4B,EAAO,CAAC,CAAC,EAAG,CAAE,cAAeL,CAAqB,CAAE,CAAC,EAE3G,OAAOM,CACT,CC7CA,IAAIE,GAAYC,GAAa,CAC3B,KAAM,CACJ,SAAU,UACX,EACD,MAAO,CACL,SAAU,WACV,IAAK,MACL,UAAW,kBACZ,CACH,CAAC,EAED,MAAAC,GAAeF,GCNf,IAAIxC,GAAY,OAAO,eACnBC,GAAa,OAAO,iBACpBC,GAAoB,OAAO,0BAC3BC,EAAsB,OAAO,sBAC7BC,GAAe,OAAO,UAAU,eAChCC,GAAe,OAAO,UAAU,qBAChCC,GAAkB,CAACC,EAAKC,EAAKd,IAAUc,KAAOD,EAAMP,GAAUO,EAAKC,EAAK,CAAE,WAAY,GAAM,aAAc,GAAM,SAAU,GAAM,MAAAd,CAAO,CAAA,EAAIa,EAAIC,CAAG,EAAId,EACtJe,EAAiB,CAACC,EAAGC,IAAM,CAC7B,QAASC,KAAQD,IAAMA,EAAI,CAAA,GACrBP,GAAa,KAAKO,EAAGC,CAAI,GAC3BN,GAAgBI,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EACpC,GAAIT,EACF,QAASS,KAAQT,EAAoBQ,CAAC,EAChCN,GAAa,KAAKM,EAAGC,CAAI,GAC3BN,GAAgBI,EAAGE,EAAMD,EAAEC,CAAI,CAAC,EAEtC,OAAOF,CACT,EACIG,GAAgB,CAACH,EAAGC,IAAMV,GAAWS,EAAGR,GAAkBS,CAAC,CAAC,EAC5DG,GAAY,CAACC,EAAQC,IAAY,CACnC,IAAIC,EAAS,CAAA,EACb,QAASL,KAAQG,EACXX,GAAa,KAAKW,EAAQH,CAAI,GAAKI,EAAQ,QAAQJ,CAAI,EAAI,IAC7DK,EAAOL,CAAI,EAAIG,EAAOH,CAAI,GAC9B,GAAIG,GAAU,MAAQZ,EACpB,QAASS,KAAQT,EAAoBY,CAAM,EACrCC,EAAQ,QAAQJ,CAAI,EAAI,GAAKP,GAAa,KAAKU,EAAQH,CAAI,IAC7DK,EAAOL,CAAI,EAAIG,EAAOH,CAAI,GAEhC,OAAOK,CACT,EACA,MAAM0B,GAAe,CACnB,KAAM,IACN,UAAW,EACb,EACMC,GAAeC,EAAU,WAAC,CAACC,EAAOC,IAAQ,CAC9C,MAAM5B,EAAK6B,GAAyB,eAAgBL,GAAcG,CAAK,EAAG,CACxE,UAAAG,EACA,MAAAC,EACA,MAAAC,EACA,SAAApB,EACA,KAAAxC,EACA,UAAAC,EACA,WAAA4D,EACA,OAAAC,EACA,UAAAC,EACA,UAAArB,EACA,SAAAsB,EACA,QAAAC,CACD,EAAGrC,EAAIK,EAASV,GAAUK,EAAI,CAC7B,YACA,QACA,QACA,WACA,OACA,YACA,aACA,SACA,YACA,YACA,WACA,SACJ,CAAG,EACK,CAAE,QAAAsC,EAAS,GAAAC,GAAOlB,GAAU,KAAM,CACtC,KAAM,eACN,WAAAY,EACA,OAAAC,EACA,SAAAE,EACA,QAAAC,CACJ,CAAG,EACKnB,EAASP,GAAU,CACvB,KAAAvC,EACA,UAAAC,EACA,SAAAuC,EACA,sBAAuBuB,EACvB,UAAArB,CACJ,CAAG,EAAE,IAAI,CAAC,CAAE,KAAA0B,EAAM,IAAAlE,EAAK,KAAAE,EAAM,cAAA2B,EAAe,OAAA1B,CAAM,EAAIgE,IAA0BhC,EAAM,cAAcV,GAAOL,GAAcJ,EAAe,CAAA,EAAIkD,CAAI,EAAG,CAC/I,IAAKC,EACL,KAAArE,EACA,UAAAC,EACA,IAAAC,EACA,OAAAG,EACA,MAAO+D,GAAQ,KAAO,OAASA,EAAK,MACpC,KAAAhE,EACA,cAAA2B,CACD,CAAA,CAAC,CAAC,EACH,OAAuBM,EAAM,cAAciC,GAAKpD,EAAe,CAC7D,MAAOA,EAAe,CAAE,MAAOlB,EAAM,OAAQA,CAAM,EAAE2D,CAAK,EAC1D,UAAWQ,EAAGD,EAAQ,KAAMR,CAAS,EACrC,IAAAF,CACD,EAAEvB,CAAM,EAAmBI,EAAM,cAAc,MAAO,CACrD,MAAO,CAAE,MAAOrC,EAAM,OAAQA,EAAM,UAAW,gBAAkB,CAClE,EAAE8C,CAAM,EAAGc,GAAyBvB,EAAM,cAAc,MAAO,CAC9D,UAAW6B,EAAQ,MACnB,MAAO,CAAE,MAAOjE,EAAY,EAAG,KAAMA,EAAY,CAAG,CACxD,EAAK2D,CAAK,CAAC,CACX,CAAC,EACDP,GAAa,YAAc,6BClG3B,IAAIkB,GAAqBC,GAAqB,mBAAoB,qBAAsB,CACtF,CAAC,OAAQ,CAAE,EAAG,aAAc,IAAK,OAAO,CAAE,EAC1C,CAAC,OAAQ,CAAE,EAAG,iBAAkB,IAAK,OAAO,CAAE,CAChD,CAAC,ECHGC,GAAqBD,GAAqB,mBAAoB,qBAAsB,CACtF,CAAC,OAAQ,CAAE,EAAG,oBAAqB,IAAK,OAAO,CAAE,EACjD,CAAC,OAAQ,CAAE,EAAG,6BAA8B,IAAK,OAAO,CAAE,CAC5D,CAAC,ECUD,MAAME,GAAyBrC,EAAM,cAAqD,CAAA,CAAE,EAC/EsC,GAA0BD,GAAuB,SCoB9DE,GAAA,CAA+C,QAAA,GACpC,SAAA,GACC,UAAA,GACC,UAAA,GACA,YAAA,GACE,0BAAA,OAEf,EAuDA,SAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,CASE,QAAA,IAAA,cAAAN,CAAA,cAAAC,CAAA,MAAAC,CAAA,IAAA,CACF,CAEO,SAAAK,EAAA,CAAuD,MAAAC,EAC5D,WAAAC,EACA,cAAAC,EAEA,uBAAAC,EACA,aAAAC,EAEA,SAAAC,EACA,MAAAC,EAAA,GAEQ,iBAAAC,EAAA,GACW,QAAAC,EAAA,GACT,MAAAC,EAAA,GACF,WAAAC,EAAA,IAAA,CACW,EAAC,MAAAC,EAAA,OACZ,OAAAC,EAAA,OACC,WAAAC,EAAA,GACI,2BAAAC,EACb,eAAAC,EAAA,GACiB,OAAA/F,EACjB,YAAAgG,EACA,wBAAAC,EACA,aAAAC,EACA,OAAAC,EACA,UAAAC,EACA,YAAAC,EACA,sBAAAC,EACA,YAAAC,EACA,YAAAC,GACA,YAAAC,GACA,MAAApD,GACA,sBAAAqD,GACA,aAAAC,GACA,QAAAhD,GACA,GAAAa,EAAAoC,GAAA,SAAA,SAAA,EACuB,aAAAC,EAEzB,EAAA,CACE,MAAAC,GAAAC,KACA,CAAAC,CAAA,EAAAC,EAAA,SAAAzC,CAAA,EACA0C,EAAA7B,GAAA8B,EAAAA,SACAC,GAAAD,EAAAA,SACA,CAAAE,GAAAC,EAAA,EAAAL,EAAA,SAAAhC,EAAA,eAAA,CAAA,EACA,CAAAsC,EAAAC,EAAA,EAAAP,EAAA,SAAgDZ,IAAApB,GAAAA,EAAA,gBAAA,EAAA,EAAA,EAAA,GACmC,EAEnFwC,GAAAP,CAAA,EACA,KAAA,CAAAQ,EAAAC,CAAA,EAAAV,WAAA,CAAyE,kBAAA,GACpD,eAAA,EACH,CAAA,EAGlBW,GAAAC,EAAAA,QAAA,IAAA,CACE,MAAAC,EAAA,CAAA,GAAAxD,GAAA,GAAA0B,CAAA,EACA+B,EAAA,CAAA,EA8DA,OA7DAD,EAAA,UACEC,EAAA,KAAA,CAAoB,GAAA,SACd,KAAAC,EAAAC,GAAA,EAAA,EACY,MAAA,QACT,MAAAH,EAAA,SAAAA,EAAA,SAAAI,EAAA,cAAA,EACoE,cAAA,IAAA,CAEzEJ,GAAAA,EAAA,cACEA,EAAA,aAAA,CACF,EACF,QAAA,GACS,KAAA,GAAAI,EAAA,6CAAA,CAAA,EACgD,CAAA,EAG7DJ,EAAA,WACEC,EAAA,KAAA,CAAoB,GAAA,UACd,KAAAC,EAAAG,GAAA,EAAA,EACY,MAAA,OACT,MAAAL,EAAA,UAAAA,EAAA,UAAAI,EAAA,eAAA,EACuE,cAAA,IAAA,CAE5EJ,GAAAA,EAAA,eACEA,EAAA,cAAA,CACF,EACF,QAAA,CAAA7C,EAAA,QAAA,GAAAA,EAAA,WAAA,EACwD,KAAA,GAAAiD,EAAA,wCAAA,CAAA,EACJ,CAAA,EAGxDJ,EAAA,aACEC,EAAA,KAAA,CAAoB,GAAA,YACd,KAAAC,EAAAI,GAAA,EAAA,EACa,MAAA,MACV,MAAAN,EAAA,YAAAA,EAAA,YAAAI,EAAA,iBAAA,EAC6E,cAAA,IAAA,CAElFJ,GAAAA,EAAA,iBACEA,EAAA,gBAAA,CACF,EACF,QAAA,CAAA7C,EAAA,QAAA,GAAAA,EAAA,WAAA,EACwD,KAAA,GAAAiD,EAAA,yCAAA,CAAA,EACH,CAAA,EAIzDJ,EAAA,WACEC,EAAA,KAAA,CAAoB,GAAA,UACd,KAAAC,EAAAK,GAAA,EAAA,EACW,MAAAP,EAAA,UAAAA,EAAA,UAAAI,EAAA,eAAA,EAC+D,cAAA,IAAA,CAE5EJ,GAAAA,EAAA,eACEA,EAAA,cAAA,CACF,EACF,QAAA,CAAA7C,EAAA,QAAA,GAAAA,EAAA,WAAA,EACwD,KAAA,GAAAiD,EAAA,4CAAA,CAAA,EACA,CAAA,EAI5DJ,EAAA,mBAAAA,EAAA,4BAAA,SACE,CAAA,GAAAA,EAAA,kBAAA,GAAAC,CAAA,EAGFD,EAAA,mBAAAA,EAAA,4BAAA,QACE,CAAA,GAAAC,EAAA,GAAAD,EAAA,iBAAA,EAGFC,CAAO,EAAA,CAAA/B,EAAAf,CAAA,CAAA,EAGTqD,GAAAT,EAAAA,QAAA,IAAA,CACE,GAAAzB,EAAA,CACE,IAAAmC,EAAAnC,EAAA,KACAoC,EAAA,CAAA,EACA,OAAApC,EAAA,QACEoC,EAAApC,EAAA,OAGFnB,EAAA,cAAA,EAAA,IAAA,CAAAwD,EAAA1E,IAAA,CACE,MAAA2E,GAAA,GAAA1B,CAAA,IAAAjD,CAAA,GACA4E,GAAA,GAAA3B,CAAA,IAAAjD,CAAA,GACA,IAAA6E,EAAAH,EAAA,SAAA,OAAA,GAAAA,EAAA,OACA,OAAAlB,GAAA,IACEqB,EAAA,GACArB,IAAAxD,IACE6E,EAAA,KAIJZ,EACEO,EAAC,CAAA,GAAAI,GAEK,OAAAC,EACJ,MAAA7E,EACA,WAAAkB,EACA,WAAAwD,EACY,SAAAA,EAAA,SACK,GAAAD,CACb,EAAAE,EAPC,CAQP,CAAA,CAEH,CAGH,MAAA,EAAQ,EAAA,CAAAnB,EAAAnB,EAAAY,EAAA/B,CAAA,CAAA,EAGV4D,GAAA,CAAAC,EAAAC,IAAA,CACEpB,EAAA,CAAA,GAAAD,EAAA,cAAAoB,EAAA,kBAAAC,CAAA,CAAA,CAA2E,EAG7EC,GAAAC,GAAA,CACEtB,EAAA,CAAA,GAAAD,EAAA,eAAAuB,CAAA,CAAA,CAA2D,EAG7DC,GAAA,CAAAJ,EAAAC,IAAA,CACEpB,EAAA,CAAA,GAAAD,EAAA,cAAAoB,EAAA,kBAAAC,CAAA,CAAA,CAA2E,EAG7EI,GAAA,IAAA,CAAmC,EAEnCC,GAAA,CAAArF,EAAAD,IAAA,CACE0D,GAAAzD,CAAA,EACAkB,GACEA,EAAA,iBAAAnB,CAAA,CACF,EAGFuF,GAAAC,GAAA,CACE,GAAArE,EAAA,CACE,MAAAsE,EAAAtE,EAAA,aACAsE,EAAA,OAAAD,EACAC,EAAA,YAAAlC,GACApC,EAAA,YAAAsE,CAAA,CAA8B,CAChC,EAGFC,GAAAC,GAAA,CACE,GAAAxE,EAAA,CACE,MAAAsE,EAAAtE,EAAA,aACAsE,EAAA,YAAAE,EACAxE,EAAA,YAAAsE,CAAA,CAA8B,CAChC,EAGFG,GAAA,IACEnE,GAAAJ,EACE6C,EACE2B,GAAC,CAAA,iBAAAxE,EACmB,SAAAkE,GACR,qBAAA,CACY,CAAA,EAK5BrB,EAAA4B,EAAAA,SAAA,CAAA,GAAA,WAAA1E,EAAA,aAAA,GAAA,SAAAX,GAAA,SAAAyD,EAEE6B,GAAC,CAAA,GAAA3E,EAAA,cACmB,SAAAA,EAAA,SACM,WAAAA,EAAA,WACE,IAAAkC,GACrB,QAAAzD,IAAAmD,GAAA,QAC0B,eAAAY,EAAA,eACH,qBAAA5B,EACN,cAAA4B,EAAA,cACK,kBAAAA,EAAA,kBACI,iBAAAwB,GACb,gBAAAL,GACD,iBAAAM,GACC,uBAAAH,GACM,MAAA,QACjB,OAAA,QACA,SAAA5D,CAEN,CAAA,CAAA,CAAA,EAMP0E,GAAA,CAAmE,gBAAA,SAChD,aAAA,MACH,EAGhBC,GAAA,CAAkE,eAAA,OAChD,kBAAA,CAAA,CACI,EAGtBC,GAAA,CAAA,GAAAF,GAAA,GAAApD,EAAA,EACAuD,GAAA,CAAA,GAAAF,GAAA,GAAApD,EAAA,EAEA,OAAAqB,EACEkC,GAAC,CAAA,SAAAhD,EACW,MAAAvB,EACV,OAAAC,EACA,OAAA5F,EACA,WAAA6F,EACA,QAAAL,EACA,MAAAC,EACA,WAAAC,EACA,MAAAV,EACA,aAAAM,EACc,aAAAuB,GACd,MAAAxD,GACA,QAAA4G,GACS,WAAAjC,EAAAmC,GAAA,CAAA,QAAAvC,GAAA,QAAAoC,GAAA,EACwF,YAAAN,GAAA,EACxE,YAAA3D,EAAAiC,EAAAoC,GAAA,CAAA,MAAAnF,EAAA,cAAA,EAAA,SAAAuE,EAAA,CAAA,EAAA,OAE0E,SAAAxB,EAGnG3D,GAAC,CAAA,MAAA,CACQ,WAAAY,EACL,QAAAT,EACS,iBAAA4E,GACT,sBAAA9C,EACA,YAAAC,EACA,YAAAC,GACA,YAAAC,EACA,EACF,SAAAuB,EAAAqC,GAAA,CAAA,wBAAApE,EAAA,SAAA+B,EAAAsC,GAAA,CAAA,OAAAnE,EAAA,aAAAD,EAAA,SAAAoC,EAAA,CAAA,CAAA,CAAA,CAMA,CAAA,CACF,CAAA,CAGN;;;","x_google_ignoreList":[0,1,2,3,4,5,6]}