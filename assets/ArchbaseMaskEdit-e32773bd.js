import{j as C}from"./jsx-runtime-c9381026.js";import{r as o}from"./index-8b3efc3f.js";import{I as B}from"./input-30511812.js";import{b as j,d as J,c as $}from"./useArchbaseDataSource-c5d317be.js";import{t as G}from"./i18next-a4b2730f.js";import{u as K}from"./use-input-props-039f064b.js";import{u as Q}from"./use-id-3df0f1f4.js";import{u as X}from"./use-force-update-11fe72c1.js";import{D as s}from"./useArchbaseDataSourceListener-92dd263c.js";import{I as F}from"./Input-5f376bf0.js";var Y=(r=>(r.CNPJ="00.000.000/0000-00",r.CEP="00.000-000",r.CPF="000.000.000-00",r.PLACA="aaa-00*00",r.PHONE="(00) 00000-0000",r))(Y||{});const Z={type:"text",size:"sm",__staticSelector:"ArchbaseMaskEdit",value:"",readOnly:!1,disabled:!1,placeholderChar:"_",placeholder:"",mask:"",showMask:!0,saveWithMask:!1};function f(r){const{inputProps:A,wrapperProps:M,mask:l,placeholderChar:I,placeholder:_,readOnly:h,disabled:S,width:w,innerRef:x,title:R,onChangeError:y,customIncompleteErrorMessage:L,...N}=K("ArchbaseMaskEdit",Z,r),P=Q(),D=x||o.useRef(),[p,E]=o.useState(""),O=X(),{dataSource:a,dataField:t,onChangeValue:g,onFocusEnter:V,onFocusExit:v,saveWithMask:T,error:u}=r,[i,d]=o.useState(u),m=o.useRef(0);o.useEffect(()=>{d(void 0)},[p]),o.useEffect(()=>{u!==i&&d(u)},[u]),o.useEffect(()=>{y&&y(i)},[i]);const c=()=>{let e=p;a&&t&&(e=a.getFieldValue(t),e||(e="")),E(e)},b=o.useCallback(()=>{c()},[]),q=o.useCallback(e=>{a&&t&&((e.type===s.dataChanged||e.type===s.recordChanged||e.type===s.afterScroll||e.type===s.afterCancel||e.type===s.afterEdit)&&(c(),O()),e.type===s.onFieldError&&e.fieldName===t&&d(e.error))},[]);j(()=>{c(),a&&t&&(a.addListener(q),a.addFieldChangeListener(t,b))}),J(()=>{a&&t&&(a.removeListener(q),a.removeFieldChangeListener(t,b))}),$(()=>{c()},[]);const z=(e,n)=>{const k=n.value.replaceAll("_","");m.current=k.length-n.unmaskedValue.length,console.log(n.unmaskedValue.length),!(k.length!==(l==null?void 0:l.length)&&n.unmaskedValue.length!==0)&&(E(ee=>e),a&&!a.isBrowsing()&&t&&a.getFieldValue(t)!==e&&a.setFieldValue(t,e),g&&g(e,n.value))},W=e=>{const n=e.target.value.replaceAll("_","");m.current,n.length<(l==null?void 0:l.length)&&n.length-m.current!==0?d(L??`${G("archbase:O campo está incompleto")}`):d(""),v&&v(e)},H=e=>{V&&V(e)},U=()=>{let e=h;return a&&!h&&(e=a.isBrowsing()),e};return C(F.Wrapper,{...M,label:R,error:i,children:C(F,{...A,...N,error:i,ref:D,component:B,mask:l,unmask:!T,lazy:!1,value:p,style:{width:w,...r.style},size:r.size,placeholderChar:I,id:P,readOnly:U(),disabled:S,placeholder:_,onAccept:z,onBlur:W,onFocus:H})})}f.displayName="ArchbaseMaskEdit";try{f.displayName="ArchbaseMaskEdit",f.__docgenInfo={description:"",displayName:"ArchbaseMaskEdit",props:{type:{defaultValue:null,description:"Tipo de campo html",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},wrapperProps:{defaultValue:null,description:"Propriedades para atribuir ao wrapper do mask edit",name:"wrapperProps",required:!1,type:{name:"Record<string, any>"}},__staticSelector:{defaultValue:null,description:"Nome do seletor estático",name:"__staticSelector",required:!1,type:{name:"string"}},dataSource:{defaultValue:null,description:"Fonte de dados onde será atribuido o valor do mask edit",name:"dataSource",required:!1,type:{name:"ArchbaseDataSource<any, any>"}},dataField:{defaultValue:null,description:"Campo onde deverá ser atribuido o valor do mask edit na fonte de dados",name:"dataField",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Indicador se o mask edit está desabilitado",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Indicador se o mask edit é somente leitura. Obs: usado em conjunto com o status da fonte de dados",name:"readOnly",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"Estilo do mask edit",name:"style",required:!1,type:{name:"CSSProperties"}},size:{defaultValue:null,description:"Tamanho do mask edit",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'}]}},width:{defaultValue:null,description:"Largura do mask edit",name:"width",required:!1,type:{name:"string | number"}},value:{defaultValue:null,description:"Valor inicial do mask edit",name:"value",required:!1,type:{name:"any"}},placeholder:{defaultValue:null,description:"Texto sugestão do mask edit",name:"placeholder",required:!1,type:{name:"string"}},placeholderChar:{defaultValue:null,description:"Caractere a ser mostrado onde não houver valor no campo",name:"placeholderChar",required:!1,type:{name:"string"}},showMask:{defaultValue:null,description:"Indicador se apresenta ou não a máscara",name:"showMask",required:!1,type:{name:"boolean"}},mask:{defaultValue:null,description:"Mascara podendo ser o tipo MaskPattern, uma Function ou uma string. Mais detalhes em: https://github.com/uNmAnNeR/imaskjs",name:"mask",required:!1,type:{name:"string | Function"}},saveWithMask:{defaultValue:null,description:"Indicador se deverá ser salvo o valor com a máscara",name:"saveWithMask",required:!1,type:{name:"boolean"}},onFocusExit:{defaultValue:null,description:"Evento quando o foco sai do edit",name:"onFocusExit",required:!1,type:{name:"FocusEventHandler<any>"}},onFocusEnter:{defaultValue:null,description:"Evento quando o edit recebe o foco",name:"onFocusEnter",required:!1,type:{name:"FocusEventHandler<any>"}},onChangeValue:{defaultValue:null,description:"Evento quando o valor do edit é alterado",name:"onChangeValue",required:!1,type:{name:"(value: string, event: any) => void"}},innerRef:{defaultValue:null,description:"Referência para o componente interno",name:"innerRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},error:{defaultValue:null,description:"Último erro ocorrido no mask edit",name:"error",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"Título do edit",name:"title",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"Título do edit",name:"label",required:!1,type:{name:"string"}},onChangeError:{defaultValue:null,description:"Evento que retorna o valor do erro",name:"onChangeError",required:!1,type:{name:"(error: string) => void"}},customIncompleteErrorMessage:{defaultValue:null,description:"Mensagem customizada a ser exibida quando o campo está incompleto",name:"customIncompleteErrorMessage",required:!1,type:{name:"string"}}}}}catch{}export{f as A,Y as M};
