import{j as v}from"./jsx-runtime-29545a09.js";import{r as o}from"./index-76fb7be0.js";import{I as D}from"./input-e9af23f3.js";import{b as z,d as T,c as W}from"./useArchbaseDataSource-0bdc03a6.js";import{u as H}from"./use-input-props-0bcecfab.js";import{u as j}from"./use-id-9525279e.js";import{u as U}from"./use-force-update-df6d2b99.js";import{D as n}from"./useArchbaseDataSourceListener-cbed610e.js";import{I as b}from"./Input-abb5d566.js";var B=(r=>(r.CNPJ="00.000.000/0000-00",r.CEP="00.000-000",r.CPF="000.000.000-00",r.PLACA="aaa-00*00",r.PHONE="(00) 00000-0000",r))(B||{});const J={type:"text",size:"sm",__staticSelector:"ArchbaseMaskEdit",value:"",readOnly:!1,disabled:!1,placeholderChar:"_",placeholder:"",mask:"",showMask:!0,saveWithMask:!1};function d(r){const{inputProps:V,wrapperProps:g,mask:s,placeholderChar:k,placeholder:F,readOnly:u,disabled:q,width:C,innerRef:A,...M}=H("ArchbaseMaskEdit",J,r),_=j(),I=A||o.useRef(),[i,c]=o.useState(""),S=U(),{dataSource:a,dataField:t,onChangeValue:p,onFocusEnter:m,onFocusExit:f,saveWithMask:w}=r,[x,O]=o.useState(r.error);o.useEffect(()=>{O(void 0)},[i]);const l=()=>{let e=i;a&&t&&(e=a.getFieldValue(t),e||(e="")),c(e)},y=o.useCallback(()=>{l()},[]),h=o.useCallback(e=>{a&&t&&(e.type===n.dataChanged||e.type===n.recordChanged||e.type===n.afterScroll||e.type===n.afterCancel||e.type===n.afterEdit)&&(l(),S())},[]);z(()=>{l(),a&&t&&(a.addListener(h),a.addFieldChangeListener(t,y))}),T(()=>{a&&t&&(a.removeListener(h),a.removeFieldChangeListener(t,y))}),W(()=>{l()},[]);const R=(e,E)=>{E.value.replaceAll("_","").length===(s==null?void 0:s.length)&&(c(G=>e),a&&!a.isBrowsing()&&t&&a.getFieldValue(t)!==e&&a.setFieldValue(t,e),p&&p(e,E.value))},P=e=>{f&&f(e)},L=e=>{m&&m(e)},N=()=>{let e=u;return a&&!u&&(e=a.isBrowsing()),e};return v(b.Wrapper,{...g,error:x,children:v(b,{...V,...M,ref:I,component:D,mask:s,unmask:!w,lazy:!1,value:i,style:{width:C,...r.style},size:r.size,placeholderChar:k,id:_,readOnly:N(),disabled:q,placeholder:F,onAccept:R,onBlur:P,onFocus:L})})}d.displayName="ArchbaseMaskEdit";try{d.displayName="ArchbaseMaskEdit",d.__docgenInfo={description:"",displayName:"ArchbaseMaskEdit",props:{type:{defaultValue:null,description:"Tipo de campo html",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},wrapperProps:{defaultValue:null,description:"Propriedades para atribuir ao wrapper do mask edit",name:"wrapperProps",required:!1,type:{name:"Record<string, any>"}},__staticSelector:{defaultValue:null,description:"Nome do seletor estático",name:"__staticSelector",required:!1,type:{name:"string"}},dataSource:{defaultValue:null,description:"Fonte de dados onde será atribuido o valor do mask edit",name:"dataSource",required:!1,type:{name:"ArchbaseDataSource<any, any>"}},dataField:{defaultValue:null,description:"Campo onde deverá ser atribuido o valor do mask edit na fonte de dados",name:"dataField",required:!1,type:{name:"string"}},disabled:{defaultValue:null,description:"Indicador se o mask edit está desabilitado",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"Indicador se o mask edit é somente leitura. Obs: usado em conjunto com o status da fonte de dados",name:"readOnly",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"Estilo do mask edit",name:"style",required:!1,type:{name:"CSSProperties"}},size:{defaultValue:null,description:"Tamanho do mask edit",name:"size",required:!1,type:{name:"enum",value:[{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'}]}},width:{defaultValue:null,description:"Largura do mask edit",name:"width",required:!1,type:{name:"string | number"}},value:{defaultValue:null,description:"Valor inicial do mask edit",name:"value",required:!1,type:{name:"any"}},placeholder:{defaultValue:null,description:"Texto sugestão do mask edit",name:"placeholder",required:!1,type:{name:"string"}},placeholderChar:{defaultValue:null,description:"Caractere a ser mostrado onde não houver valor no campo",name:"placeholderChar",required:!1,type:{name:"string"}},showMask:{defaultValue:null,description:"Indicador se apresenta ou não a máscara",name:"showMask",required:!1,type:{name:"boolean"}},mask:{defaultValue:null,description:"Mascara podendo ser o tipo MaskPattern, uma Function ou uma string. Mais detalhes em: https://github.com/uNmAnNeR/imaskjs",name:"mask",required:!1,type:{name:"string | Function"}},saveWithMask:{defaultValue:null,description:"Indicador se deverá ser salvo o valor com a máscara",name:"saveWithMask",required:!1,type:{name:"boolean"}},onFocusExit:{defaultValue:null,description:"Evento quando o foco sai do edit",name:"onFocusExit",required:!1,type:{name:"FocusEventHandler<any>"}},onFocusEnter:{defaultValue:null,description:"Evento quando o edit recebe o foco",name:"onFocusEnter",required:!1,type:{name:"FocusEventHandler<any>"}},onChangeValue:{defaultValue:null,description:"Evento quando o valor do edit é alterado",name:"onChangeValue",required:!1,type:{name:"(value: string, event: any) => void"}},innerRef:{defaultValue:null,description:"Referência para o componente interno",name:"innerRef",required:!1,type:{name:"RefObject<HTMLInputElement>"}},error:{defaultValue:null,description:"Último erro ocorrido no mask edit",name:"error",required:!1,type:{name:"string"}}}}}catch{}export{d as A,B as M};
